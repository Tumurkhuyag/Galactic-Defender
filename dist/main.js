/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game_view */ \"./src/scripts/game_view.js\");\n\nconst preloadedImages = [];\nconst imageUrls = [\"src/assets/images/boss1.png\", \"src/assets/images/enemy_projectile.png\", \"src/assets/images/enemy1.png\", \"src/assets/images/enemy2.png\", \"src/assets/images/enemy3.png\", \"src/assets/images/player_projectile.png\", \"src/assets/images/player1.png\", \"src/assets/images/game_background.png\", \"src/assets/images/explosion1.png\", \"src/assets/images/explosion2.png\"];\nimageUrls.forEach((url, i) => {\n  preloadedImages[i] = new Image();\n  preloadedImages[i].src = url;\n});\nwindow.addEventListener(\"load\", () => {\n  window.canvas = document.getElementById(\"game-view\");\n  window.ctx = canvas.getContext(\"2d\");\n  const view = new _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, ctx);\n  view.start();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBMkM7QUFFM0MsTUFBTUMsZUFBZSxHQUFHLEVBQUU7QUFDMUIsTUFBTUMsU0FBUyxHQUFHLENBQ2hCLDZCQUE2QixFQUM3Qix3Q0FBd0MsRUFDeEMsOEJBQThCLEVBQzlCLDhCQUE4QixFQUM5Qiw4QkFBOEIsRUFDOUIseUNBQXlDLEVBQ3pDLCtCQUErQixFQUMvQix1Q0FBdUMsRUFDdkMsa0NBQWtDLEVBQ2xDLGtDQUFrQyxDQUNuQztBQUVEQSxTQUFTLENBQUNDLE9BQU8sQ0FBQyxDQUFDQyxHQUFHLEVBQUVDLENBQUMsS0FBSztFQUM1QkosZUFBZSxDQUFDSSxDQUFDLENBQUMsR0FBRyxJQUFJQyxLQUFLLEVBQUU7RUFDaENMLGVBQWUsQ0FBQ0ksQ0FBQyxDQUFDLENBQUNFLEdBQUcsR0FBR0gsR0FBRztBQUM5QixDQUFDLENBQUM7QUFFRkksTUFBTSxDQUFDQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsTUFBTTtFQUNwQ0QsTUFBTSxDQUFDRSxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLFdBQVcsQ0FBQztFQUNwREosTUFBTSxDQUFDSyxHQUFHLEdBQUdILE1BQU0sQ0FBQ0ksVUFBVSxDQUFDLElBQUksQ0FBQztFQUNwQyxNQUFNQyxJQUFJLEdBQUcsSUFBSWYsMERBQVEsQ0FBQ1UsTUFBTSxFQUFFRyxHQUFHLENBQUM7RUFDdENFLElBQUksQ0FBQ0MsS0FBSyxFQUFFO0FBQ2QsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWVWaWV3IGZyb20gXCIuL3NjcmlwdHMvZ2FtZV92aWV3XCI7XG5cbmNvbnN0IHByZWxvYWRlZEltYWdlcyA9IFtdO1xuY29uc3QgaW1hZ2VVcmxzID0gW1xuICBcInNyYy9hc3NldHMvaW1hZ2VzL2Jvc3MxLnBuZ1wiLFxuICBcInNyYy9hc3NldHMvaW1hZ2VzL2VuZW15X3Byb2plY3RpbGUucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvZW5lbXkxLnBuZ1wiLFxuICBcInNyYy9hc3NldHMvaW1hZ2VzL2VuZW15Mi5wbmdcIixcbiAgXCJzcmMvYXNzZXRzL2ltYWdlcy9lbmVteTMucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvcGxheWVyX3Byb2plY3RpbGUucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvcGxheWVyMS5wbmdcIixcbiAgXCJzcmMvYXNzZXRzL2ltYWdlcy9nYW1lX2JhY2tncm91bmQucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvZXhwbG9zaW9uMS5wbmdcIixcbiAgXCJzcmMvYXNzZXRzL2ltYWdlcy9leHBsb3Npb24yLnBuZ1wiXG5dXG5cbmltYWdlVXJscy5mb3JFYWNoKCh1cmwsIGkpID0+IHtcbiAgcHJlbG9hZGVkSW1hZ2VzW2ldID0gbmV3IEltYWdlKCk7XG4gIHByZWxvYWRlZEltYWdlc1tpXS5zcmMgPSB1cmw7XG59KVxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4ge1xuICB3aW5kb3cuY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnYW1lLXZpZXdcIik7XG4gIHdpbmRvdy5jdHggPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuICBjb25zdCB2aWV3ID0gbmV3IEdhbWVWaWV3KGNhbnZhcywgY3R4KTtcbiAgdmlldy5zdGFydCgpXG59KTtcbiJdLCJuYW1lcyI6WyJHYW1lVmlldyIsInByZWxvYWRlZEltYWdlcyIsImltYWdlVXJscyIsImZvckVhY2giLCJ1cmwiLCJpIiwiSW1hZ2UiLCJzcmMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImN0eCIsImdldENvbnRleHQiLCJ2aWV3Iiwic3RhcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/boss.js":
/*!*****************************!*\
  !*** ./src/scripts/boss.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projectile */ \"./src/scripts/projectile.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\nclass Boss extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game) {\n    // Ship/Moving Object related arguments\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/images/boss1.png\";\n    let height = 220;\n    let width = 250;\n    let health = Boss.MAX_HEALTH;\n    // let health = 1;\n    let projectileDmg = 2;\n    // let projectileDmg = 10;\n\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [game.canvasWidth / 2 - width / 2, 0 - height * 2],\n      velocity: [0, 1],\n      // velocity: [0, 5],\n      speed: 1,\n      health: health,\n      game: game,\n      image: image,\n      type: \"enemies\"\n    };\n\n    // Projectile related arguments\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/images/enemy_projectile.png\";\n    const projectileArgs = [{\n      objArgs: {\n        velocity: [0, 8],\n        speed: 8,\n        health: projectileDmg,\n        game: game,\n        width: 10,\n        height: 40,\n        image: image\n      },\n      type: \"bullet\",\n      origin: \"enemy\",\n      projectileSound: \"bossProjectile\"\n    }];\n\n    // boss projectile patterns, to be activated based on boss phase\n    const patternArgs = [{\n      positionDeltas: [[18, 200], [width - 32, 200]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: 1000,\n      onCooldown: true,\n      projectileArgIndex: 0\n    }, {\n      positionDeltas: [[60, 210], [width - 76, 210]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: 2000,\n      onCooldown: true,\n      projectileArgIndex: 0\n    }, {\n      positionDeltas: [[75, 180], [width - 88, 180]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: 2000,\n      onCooldown: true,\n      projectileArgIndex: 0\n    }, {\n      positionDeltas: [[100, 160], [width - 110, 160]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: 2000,\n      onCooldown: true,\n      projectileArgIndex: 0\n    }];\n    super(objArgs, projectileArgs, patternArgs);\n  }\n\n  // box1 is the weakspot\n  getHitbox() {\n    const box1 = {\n      x: this.position[0] + 85,\n      y: this.position[1] + 90,\n      width: 80,\n      height: 70\n    };\n    const box2 = {\n      x: this.position[0] + 10,\n      y: this.position[1] + 90,\n      width: (this.width - 100) / 2,\n      height: this.height - 110\n    };\n    const box3 = {\n      x: this.position[0] + 165,\n      y: this.position[1] + 90,\n      width: (this.width - 100) / 2,\n      height: this.height - 110\n    };\n    const box4 = {\n      x: this.position[0] + 45,\n      y: this.position[1] + 30,\n      width: 155,\n      height: 60\n    };\n    return [box1, box2, box3, box4];\n  }\n\n  // only takes damage if weakpoint hit (index 0 is the hitbox1 weakpoint)\n  handleCollided(otherObj, hitboxesCollided) {\n    const otherObjClass = otherObj.constructor.name;\n    if (otherObjClass === \"Projectile\") {\n      if (hitboxesCollided.includes(0)) {\n        const damage = otherObj.health;\n        this.damageTaken(damage);\n      }\n      otherObj.remove();\n    }\n  }\n\n  // Boss will slowly move down center from the top during cutscene\n  // then move side to side throughout the fight at normal speed \n  updateVelocity() {\n    if (this.movementDisabled) return;\n    if (this.position[1] > 0) {\n      this.speed = 1.5;\n      if (this.velocity[0] === 0 || this.position[0] < 0) {\n        if (this.velocity[0] === 0) {\n          new _timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.game, this.resetCooldown.bind(this, 0), 1250);\n          this.game.sounds.switchBGM(\"bossBGM\");\n          this.game.player.disabled = false;\n        }\n        this.velocity = [this.speed, 0];\n      } else if (this.position[0] > this.game.canvasWidth - this.width) {\n        this.velocity = [-this.speed, 0];\n      }\n    }\n  }\n\n  // Boss shooting patterns updated based on health remaining\n  updateShootingPattern() {\n    if (this.health === 10) {\n      this.patternArgs[3].onCooldown = false;\n    } else if (this.health === 15) {\n      this.patternArgs[2].onCooldown = false;\n    } else if (this.health === 18) {\n      this.patternArgs[1].onCooldown = false;\n    }\n  }\n  shootProjectile() {\n    if (!this.disabled) super.shootProjectile();\n  }\n  damageTaken(damage) {\n    if (!this.disabled) {\n      super.damageTaken(damage);\n      this.updateShootingPattern();\n    }\n  }\n\n  // Boss death animations plays alot of minor explosions and ends with big finale explosion\n  // Then proceeds to game win after a delay\n  remove() {\n    this.game.score += 1000;\n    this.disabled = true;\n\n    // minor explosions\n    for (let i = 0; i < 20; i++) {\n      const timeDelay = i * 200;\n      if (i % 2 === 0) new _timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.game, () => this.game.sounds.add(\"explosion\"), timeDelay);\n      new _timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.game, () => {\n        const hitBoxes = this.getHitbox();\n        const randHitBox = hitBoxes[i % hitBoxes.length];\n        const randPosX = Math.floor(Math.random() * (randHitBox.x + randHitBox.width - randHitBox.x) + randHitBox.x);\n        const randPosY = Math.floor(Math.random() * (randHitBox.y + randHitBox.height - randHitBox.y) + randHitBox.y);\n        const dx = this.velocity[0] < 0 ? 30 : 10;\n        new _explosion__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, 80, [randPosX - dx, randPosY - 70], \"minor\", [0, 0.1]);\n      }, timeDelay);\n    }\n\n    // stop for final explosion\n    new _timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.game, () => {\n      this.velocity = [0, 0];\n      this.speed = 0;\n      this.movementDisabled = true;\n    }, 4000);\n\n    // final explosion and start timer for setting game win\n    new _timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.game, () => {\n      this.game.sounds.playBossDeathSound();\n      const multiplier = this.velocity[0] < 0 ? 1 : -1;\n      const posX = this.position[0] - this.width / 2;\n      const posY = this.position[1] - this.height / 1.5;\n      new _explosion__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, 500, [posX - 30, posY], \"major\", [0, 0]);\n      super.remove();\n      new _timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.game, this.game.setWin.bind(this.game), 3500);\n    }, 4500);\n  }\n}\n_defineProperty(Boss, \"MAX_HEALTH\", 20);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Boss);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/boss.js\n");

/***/ }),

/***/ "./src/scripts/enemy_ship.js":
/*!***********************************!*\
  !*** ./src/scripts/enemy_ship.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n\n\n\nclass EnemyShip extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game, posX, speed, cooldown) {\n    // Ship/MovingObject related arguments\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/images/enemy1.png\";\n    let height = 40;\n    let width = 46;\n    let health = 1;\n    let projectileDmg = 1;\n    // let projectileDmg = 10;\n\n    // in case the random position clips the ship image out of bounds\n    if (posX < 0 - width) {\n      posX = 0;\n    } else if (posX > game.canvasWidth - width) {\n      posX = game.canvasWidth - width;\n    }\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [posX, 0 - height * 2],\n      velocity: [0, speed],\n      speed: speed,\n      health: health,\n      game: game,\n      image: image,\n      type: \"enemies\"\n    };\n\n    // Projectile related arguments\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/images/enemy_projectile.png\";\n    const projectileArgs = [{\n      objArgs: {\n        velocity: [0, 8],\n        speed: 8,\n        health: projectileDmg,\n        game: game,\n        width: 5,\n        height: 20,\n        image: image\n      },\n      type: \"bullet\",\n      origin: \"enemy\",\n      projectileSound: \"enemyProjectile\"\n    }];\n\n    // projectile pattern\n    const patternArgs = [{\n      positionDeltas: [[width / 2.25, 10]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: cooldown,\n      onCooldown: false,\n      projectileArgIndex: 0\n    }];\n    super(objArgs, projectileArgs, patternArgs);\n  }\n\n  // enemy ships simply move from top to bottom\n  // removed once they get below the screen\n  handleBounds(newPosition) {\n    if (!this.inUpperYHeightBounds(newPosition[1])) {\n      this.remove();\n    } else {\n      this.position = newPosition;\n    }\n  }\n  remove() {\n    if (this.health <= 0) {\n      this.game.sounds.add(\"explosion\");\n      new _explosion__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, 80, this.position, \"minor\", [0, 0.5]);\n      this.game.score += 10;\n    }\n    super.remove();\n    this.game.enemiesRemaining -= 1;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (EnemyShip);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUM4QixNQUFNLENBQUNDLEdBQUcsQ0FBQyxXQUFXLENBQUM7TUFDakMsSUFBSWxDLGtEQUFTLENBQUMsSUFBSSxDQUFDRyxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQ2MsUUFBUSxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztNQUM5RCxJQUFJLENBQUNkLElBQUksQ0FBQ2dDLEtBQUssSUFBSSxFQUFFO0lBQ3ZCO0lBRUEsS0FBSyxDQUFDSCxNQUFNLEVBQUU7SUFDZCxJQUFJLENBQUM3QixJQUFJLENBQUNpQyxnQkFBZ0IsSUFBSSxDQUFDO0VBQ2pDO0FBQ0Y7QUFFQSwrREFBZW5DLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvc2NyaXB0cy9lbmVteV9zaGlwLmpzP2I1ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNoaXAgZnJvbSBcIi4vc2hpcFwiO1xuaW1wb3J0IE1vdmluZ09iamVjdCBmcm9tIFwiLi9tb3Zpbmdfb2JqZWN0XCI7XG5pbXBvcnQgRXhwbG9zaW9uIGZyb20gXCIuL2V4cGxvc2lvblwiO1xuXG5jbGFzcyBFbmVteVNoaXAgZXh0ZW5kcyBTaGlwIHtcbiAgY29uc3RydWN0b3IoZ2FtZSwgcG9zWCwgc3BlZWQsIGNvb2xkb3duKSB7XG4gICAgLy8gU2hpcC9Nb3ZpbmdPYmplY3QgcmVsYXRlZCBhcmd1bWVudHNcbiAgICBsZXQgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltYWdlLnNyYyA9IFwic3JjL2Fzc2V0cy9pbWFnZXMvZW5lbXkxLnBuZ1wiO1xuICAgIGxldCBoZWlnaHQgPSA0MDtcbiAgICBsZXQgd2lkdGggPSA0NjtcbiAgICBsZXQgaGVhbHRoID0gMTtcbiAgICBsZXQgcHJvamVjdGlsZURtZyA9IDE7XG4gICAgLy8gbGV0IHByb2plY3RpbGVEbWcgPSAxMDtcblxuICAgIC8vIGluIGNhc2UgdGhlIHJhbmRvbSBwb3NpdGlvbiBjbGlwcyB0aGUgc2hpcCBpbWFnZSBvdXQgb2YgYm91bmRzXG4gICAgaWYgKHBvc1ggPCAwIC0gd2lkdGgpIHtcbiAgICAgIHBvc1ggPSAwO1xuICAgIH0gZWxzZSBpZiAocG9zWCA+IGdhbWUuY2FudmFzV2lkdGggLSB3aWR0aCkge1xuICAgICAgcG9zWCA9IGdhbWUuY2FudmFzV2lkdGggLSB3aWR0aDtcbiAgICB9XG5cbiAgICBjb25zdCBvYmpBcmdzID0ge1xuICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICBwb3NpdGlvbjogW3Bvc1gsIDAgLSAoaGVpZ2h0ICogMildLFxuICAgICAgdmVsb2NpdHk6IFswLCBzcGVlZF0sXG4gICAgICBzcGVlZDogc3BlZWQsXG4gICAgICBoZWFsdGg6IGhlYWx0aCxcbiAgICAgIGdhbWU6IGdhbWUsXG4gICAgICBpbWFnZTogaW1hZ2UsXG4gICAgICB0eXBlOiBcImVuZW1pZXNcIlxuICAgIH1cblxuICAgIC8vIFByb2plY3RpbGUgcmVsYXRlZCBhcmd1bWVudHNcbiAgICBpbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgaW1hZ2Uuc3JjID0gXCJzcmMvYXNzZXRzL2ltYWdlcy9lbmVteV9wcm9qZWN0aWxlLnBuZ1wiO1xuICAgIGNvbnN0IHByb2plY3RpbGVBcmdzID0gW3tcbiAgICAgIG9iakFyZ3M6IHtcbiAgICAgICAgdmVsb2NpdHk6IFswLCA4XSxcbiAgICAgICAgc3BlZWQ6IDgsXG4gICAgICAgIGhlYWx0aDogcHJvamVjdGlsZURtZyxcbiAgICAgICAgZ2FtZTogZ2FtZSxcbiAgICAgICAgd2lkdGg6IDUsXG4gICAgICAgIGhlaWdodDogMjAsXG4gICAgICAgIGltYWdlOiBpbWFnZVxuICAgICAgfSxcbiAgICAgIHR5cGU6IFwiYnVsbGV0XCIsXG4gICAgICBvcmlnaW46IFwiZW5lbXlcIixcbiAgICAgIHByb2plY3RpbGVTb3VuZDogXCJlbmVteVByb2plY3RpbGVcIlxuICAgIH1dXG5cbiAgICAvLyBwcm9qZWN0aWxlIHBhdHRlcm5cbiAgICBjb25zdCBwYXR0ZXJuQXJncyA9IFt7XG4gICAgICBwb3NpdGlvbkRlbHRhczogW1t3aWR0aC8oMi4yNSksIDEwXV0sXG4gICAgICBiYXRjaEZpcmVOdW06IDEsXG4gICAgICBiYXRjaEZpcmVJbnRlcnZhbDogMCxcbiAgICAgIGNvb2xkb3duOiBjb29sZG93bixcbiAgICAgIG9uQ29vbGRvd246IGZhbHNlLFxuICAgICAgcHJvamVjdGlsZUFyZ0luZGV4OiAwXG4gICAgfV1cblxuICAgIHN1cGVyKG9iakFyZ3MsIHByb2plY3RpbGVBcmdzLCBwYXR0ZXJuQXJncyk7XG4gIH1cblxuICAvLyBlbmVteSBzaGlwcyBzaW1wbHkgbW92ZSBmcm9tIHRvcCB0byBib3R0b21cbiAgLy8gcmVtb3ZlZCBvbmNlIHRoZXkgZ2V0IGJlbG93IHRoZSBzY3JlZW5cbiAgaGFuZGxlQm91bmRzKG5ld1Bvc2l0aW9uKSB7XG4gICAgaWYgKCF0aGlzLmluVXBwZXJZSGVpZ2h0Qm91bmRzKG5ld1Bvc2l0aW9uWzFdKSkge1xuICAgICAgdGhpcy5yZW1vdmUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wb3NpdGlvbiA9IG5ld1Bvc2l0aW9uO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZSgpIHtcbiAgICBpZiAodGhpcy5oZWFsdGggPD0gMCkge1xuICAgICAgdGhpcy5nYW1lLnNvdW5kcy5hZGQoXCJleHBsb3Npb25cIik7XG4gICAgICBuZXcgRXhwbG9zaW9uKHRoaXMuZ2FtZSwgODAsIHRoaXMucG9zaXRpb24sIFwibWlub3JcIiwgWzAsIDAuNV0pO1xuICAgICAgdGhpcy5nYW1lLnNjb3JlICs9IDEwO1xuICAgIH1cblxuICAgIHN1cGVyLnJlbW92ZSgpO1xuICAgIHRoaXMuZ2FtZS5lbmVtaWVzUmVtYWluaW5nIC09IDE7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRW5lbXlTaGlwOyJdLCJuYW1lcyI6WyJTaGlwIiwiTW92aW5nT2JqZWN0IiwiRXhwbG9zaW9uIiwiRW5lbXlTaGlwIiwiY29uc3RydWN0b3IiLCJnYW1lIiwicG9zWCIsInNwZWVkIiwiY29vbGRvd24iLCJpbWFnZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyYyIsImhlaWdodCIsIndpZHRoIiwiaGVhbHRoIiwicHJvamVjdGlsZURtZyIsImNhbnZhc1dpZHRoIiwib2JqQXJncyIsInBvc2l0aW9uIiwidmVsb2NpdHkiLCJ0eXBlIiwicHJvamVjdGlsZUFyZ3MiLCJvcmlnaW4iLCJwcm9qZWN0aWxlU291bmQiLCJwYXR0ZXJuQXJncyIsInBvc2l0aW9uRGVsdGFzIiwiYmF0Y2hGaXJlTnVtIiwiYmF0Y2hGaXJlSW50ZXJ2YWwiLCJvbkNvb2xkb3duIiwicHJvamVjdGlsZUFyZ0luZGV4IiwiaGFuZGxlQm91bmRzIiwibmV3UG9zaXRpb24iLCJpblVwcGVyWUhlaWdodEJvdW5kcyIsInJlbW92ZSIsInNvdW5kcyIsImFkZCIsInNjb3JlIiwiZW5lbWllc1JlbWFpbmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/enemy_ship.js\n");

/***/ }),

/***/ "./src/scripts/explosion.js":
/*!**********************************!*\
  !*** ./src/scripts/explosion.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n\n\n// Explosion class handles different explosion types\n// minor for enemy ships, major for player and boss death\nclass Explosion extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game, size, position, explosionType, velocityDelta) {\n    const image = document.createElement(\"img\");\n    if (explosionType === \"minor\") {\n      image.src = \"src/assets/images/explosion1.png\";\n    } else if (explosionType === \"major\") {\n      image.src = \"src/assets/images/explosion2.png\";\n    }\n    const argsObj = {\n      position: position,\n      velocity: [0, 0],\n      speed: 0,\n      health: 0,\n      game: game,\n      width: size,\n      height: size,\n      image: image,\n      type: \"explosions\"\n    };\n    super(argsObj);\n    if (explosionType === \"minor\") {\n      this.maxFrames = 20;\n      this.imgSize = 192;\n      this.cutSize = 5;\n    } else if (explosionType === \"major\") {\n      this.maxFrames = 48;\n      this.imgSize = 240;\n      this.cutSize = 8;\n    }\n    this.frame = 0;\n    this.velocityDelta = velocityDelta;\n  }\n\n  // explosions are animated sprites with multiple frames\n  draw(ctx) {\n    const yOffset = Math.floor(this.frame / this.cutSize);\n    const xOffset = this.frame % this.cutSize;\n    ctx.drawImage(this.image, this.imgSize * xOffset, this.imgSize * yOffset, this.imgSize, this.imgSize, this.position[0], this.position[1], this.width, this.height);\n    this.frame += 1;\n    if (this.frame >= this.maxFrames) {\n      this.remove();\n    }\n  }\n  updateVelocity() {\n    this.velocity[0] += this.velocityDelta[0];\n    this.velocity[1] += this.velocityDelta[1];\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Explosion);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL2V4cGxvc2lvbi5qcz9lMzUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNb3ZpbmdPYmplY3QgZnJvbSBcIi4vbW92aW5nX29iamVjdFwiO1xuXG4vLyBFeHBsb3Npb24gY2xhc3MgaGFuZGxlcyBkaWZmZXJlbnQgZXhwbG9zaW9uIHR5cGVzXG4vLyBtaW5vciBmb3IgZW5lbXkgc2hpcHMsIG1ham9yIGZvciBwbGF5ZXIgYW5kIGJvc3MgZGVhdGhcbmNsYXNzIEV4cGxvc2lvbiBleHRlbmRzIE1vdmluZ09iamVjdCB7XG4gIGNvbnN0cnVjdG9yKGdhbWUsIHNpemUsIHBvc2l0aW9uLCBleHBsb3Npb25UeXBlLCB2ZWxvY2l0eURlbHRhKSB7XG4gICAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGlmIChleHBsb3Npb25UeXBlID09PSBcIm1pbm9yXCIpIHtcbiAgICAgIGltYWdlLnNyYyA9IFwic3JjL2Fzc2V0cy9pbWFnZXMvZXhwbG9zaW9uMS5wbmdcIjtcbiAgICB9IGVsc2UgaWYgKGV4cGxvc2lvblR5cGUgPT09IFwibWFqb3JcIiApIHtcbiAgICAgIGltYWdlLnNyYyA9IFwic3JjL2Fzc2V0cy9pbWFnZXMvZXhwbG9zaW9uMi5wbmdcIjtcbiAgICB9XG5cbiAgICBjb25zdCBhcmdzT2JqID0ge1xuICAgICAgcG9zaXRpb246IHBvc2l0aW9uLFxuICAgICAgdmVsb2NpdHk6IFswLCAwXSxcbiAgICAgIHNwZWVkOiAwLFxuICAgICAgaGVhbHRoOiAwLFxuICAgICAgZ2FtZTogZ2FtZSxcbiAgICAgIHdpZHRoOiBzaXplLFxuICAgICAgaGVpZ2h0OiBzaXplLFxuICAgICAgaW1hZ2U6IGltYWdlLFxuICAgICAgdHlwZTogXCJleHBsb3Npb25zXCJcbiAgICB9XG4gICAgc3VwZXIoYXJnc09iaik7XG5cbiAgICBpZiAoZXhwbG9zaW9uVHlwZSA9PT0gXCJtaW5vclwiKSB7XG4gICAgICB0aGlzLm1heEZyYW1lcyA9IDIwO1xuICAgICAgdGhpcy5pbWdTaXplID0gMTkyO1xuICAgICAgdGhpcy5jdXRTaXplID0gNTtcbiAgICB9IGVsc2UgaWYgKGV4cGxvc2lvblR5cGUgPT09IFwibWFqb3JcIiApIHtcbiAgICAgIHRoaXMubWF4RnJhbWVzID0gNDg7XG4gICAgICB0aGlzLmltZ1NpemUgPSAyNDA7XG4gICAgICB0aGlzLmN1dFNpemUgPSA4O1xuICAgIH1cblxuICAgIHRoaXMuZnJhbWUgPSAwO1xuICAgIHRoaXMudmVsb2NpdHlEZWx0YSA9IHZlbG9jaXR5RGVsdGE7XG4gIH1cblxuICAvLyBleHBsb3Npb25zIGFyZSBhbmltYXRlZCBzcHJpdGVzIHdpdGggbXVsdGlwbGUgZnJhbWVzXG4gIGRyYXcoY3R4KSB7XG4gICAgY29uc3QgeU9mZnNldCA9IE1hdGguZmxvb3IodGhpcy5mcmFtZS90aGlzLmN1dFNpemUpO1xuICAgIGNvbnN0IHhPZmZzZXQgPSB0aGlzLmZyYW1lICUgdGhpcy5jdXRTaXplO1xuICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5pbWFnZSwgXG4gICAgICAgICAgICAgICAgICB0aGlzLmltZ1NpemUqeE9mZnNldCwgdGhpcy5pbWdTaXplKnlPZmZzZXQsIHRoaXMuaW1nU2l6ZSwgdGhpcy5pbWdTaXplLCBcbiAgICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb25bMF0sIHRoaXMucG9zaXRpb25bMV0sIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTtcbiAgICB0aGlzLmZyYW1lICs9IDE7XG5cbiAgICBpZiAodGhpcy5mcmFtZSA+PSB0aGlzLm1heEZyYW1lcykge1xuICAgICAgdGhpcy5yZW1vdmUoKTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVWZWxvY2l0eSgpIHtcbiAgICB0aGlzLnZlbG9jaXR5WzBdICs9IHRoaXMudmVsb2NpdHlEZWx0YVswXTtcbiAgICB0aGlzLnZlbG9jaXR5WzFdICs9IHRoaXMudmVsb2NpdHlEZWx0YVsxXTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFeHBsb3Npb247Il0sIm5hbWVzIjpbIk1vdmluZ09iamVjdCIsIkV4cGxvc2lvbiIsImNvbnN0cnVjdG9yIiwiZ2FtZSIsInNpemUiLCJwb3NpdGlvbiIsImV4cGxvc2lvblR5cGUiLCJ2ZWxvY2l0eURlbHRhIiwiaW1hZ2UiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzcmMiLCJhcmdzT2JqIiwidmVsb2NpdHkiLCJzcGVlZCIsImhlYWx0aCIsIndpZHRoIiwiaGVpZ2h0IiwidHlwZSIsIm1heEZyYW1lcyIsImltZ1NpemUiLCJjdXRTaXplIiwiZnJhbWUiLCJkcmF3IiwiY3R4IiwieU9mZnNldCIsIk1hdGgiLCJmbG9vciIsInhPZmZzZXQiLCJkcmF3SW1hZ2UiLCJyZW1vdmUiLCJ1cGRhdGVWZWxvY2l0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/explosion.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _player_ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player_ship */ \"./src/scripts/player_ship.js\");\n/* harmony import */ var _enemy_ship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enemy_ship */ \"./src/scripts/enemy_ship.js\");\n/* harmony import */ var _boss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boss */ \"./src/scripts/boss.js\");\n/* harmony import */ var _sound__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sound */ \"./src/scripts/sound.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\n// Game class handles overall game state logic\nclass Game {\n  constructor(canvas, gameView) {\n    this.canvas = canvas;\n    this.canvasWidth = canvas.width;\n    this.canvasHeight = canvas.height;\n    this.gameView = gameView;\n    this.enemyWave = 0;\n    // this.enemyWave = 5;\n    this.addEnemyOnCooldown = true;\n    this.addedEnemies = 0;\n    this.enemiesRemaining = 0;\n    this.enemyWaveCount = 0;\n    this.score = 0;\n    this.gameOver = false;\n    this.win = false;\n    this.startScreen = true;\n\n    // all moving objects and timers have a unique game id\n    this.idCounter = 1;\n    this.timers = {};\n    this.allMovingObjects = {\n      player: {},\n      enemies: {},\n      projectiles: {},\n      explosions: {}\n    };\n    this.player = new _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    this.bossFight = false;\n    this.boss = null;\n\n    // all sounds in the game handled with the Sound class\n    this.sounds = new _sound__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n  }\n\n  // apply game logic to determine next state of the game for next animation frame\n  step(timeDelta) {\n    this.checkCollisions();\n    if (!this.bossFight) this.setEnemies();\n    this.moveObjects(timeDelta);\n    this.shootProjectiles();\n  }\n  pauseTimers() {\n    Object.values(this.timers).forEach(timer => timer.pause());\n  }\n  resumeTimers() {\n    Object.values(this.timers).forEach(timer => timer.resume());\n  }\n\n  // call move() for all MovingObject objects\n  moveObjects(timeDelta) {\n    for (let key in this.allMovingObjects) {\n      Object.values(this.allMovingObjects[key]).forEach(obj => obj.move(timeDelta));\n    }\n  }\n\n  // call shoot() for all Ship objects (player and enemies)\n  shootProjectiles() {\n    this.player.shootProjectile();\n    Object.values(this.allMovingObjects.enemies).forEach(enemy => enemy.shootProjectile());\n  }\n\n  // first check projectile collisions, then check player to enemy ship collisions\n  checkCollisions() {\n    Object.values(this.allMovingObjects.projectiles).forEach(projectile => {\n      if (projectile.origin === \"player\") {\n        Object.values(this.allMovingObjects.enemies).forEach(enemy => {\n          enemy.collideCheck(projectile);\n        });\n      } else {\n        this.player.collideCheck(projectile);\n      }\n    });\n    Object.values(this.allMovingObjects.enemies).forEach(enemy => {\n      this.player.collideCheck(enemy);\n    });\n  }\n\n  // heal player 3hp per round (up to max health)\n  healPlayer() {\n    if (this.allMovingObjects.player && this.player.health > 0) {\n      this.player.health = Math.min(this.player.health + 3, _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"].MAX_HEALTH);\n    }\n  }\n\n  // next wave if 0 enemies remaining, activate boss fight if last wave finished\n  // increased enemies per wave\n  // multiply score by remaining player health, and then heal player\n  setEnemies() {\n    if (this.enemiesRemaining === 0) {\n      if (this.enemyWave < Game.MAX_ENEMY_WAVE) {\n        this.enemyWave += 1;\n        this.enemyWaveCount = this.enemyWave * 5;\n        this.enemiesRemaining = this.enemyWaveCount;\n        this.addedEnemies = 0;\n        this.score *= Math.ceil(this.player.health / 2) || 1;\n        this.healPlayer();\n      } else {\n        this.setBoss();\n      }\n    }\n\n    // throught a wave, enemies are placed in clusters of 3 to 10 at different intervals\n    if (!this.addEnemyOnCooldown) {\n      const remaining = this.enemyWaveCount - this.addedEnemies;\n      let numNewEnemies;\n      if (remaining < 10) {\n        numNewEnemies = remaining;\n      } else {\n        numNewEnemies = Math.floor(Math.random() * (10 - 3) + 3);\n      }\n      this.addedEnemies += numNewEnemies;\n\n      // randomize position, speed, and shoot cooldown for each enemy\n      for (let i = 0; i < numNewEnemies; i++) {\n        const randPosX = Math.floor(Math.random() * this.canvasWidth);\n        const randSpeed = Math.random() * (5 - 2) + 2;\n        const randCooldown = Math.floor(Math.random() * (1000 - 450) + 450);\n        new _enemy_ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, randPosX, randSpeed, randCooldown);\n      }\n\n      // set cooldown before adding next group of enemies, reset flag in 1 to 3 seconds\n      this.addEnemyOnCooldown = true;\n      const randTimeOut = Math.random() * (3000 - 1000) + 1000;\n      new _timer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.resetAddEnemyCooldown.bind(this), randTimeOut);\n    }\n  }\n  resetAddEnemyCooldown() {\n    this.addEnemyOnCooldown = false;\n  }\n\n  // waits for all player projectiles to clear, and temporarily disable player (for cutscene to play) \n  // also heal player and update score\n  setBoss() {\n    this.player.disabled = true;\n    if (Object.values(this.allMovingObjects.projectiles).length === 0) {\n      this.sounds.switchBGM(\"bossIncomingBGM\");\n      this.boss = new _boss__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n      this.score *= Math.ceil(this.player.health / 2) || 1;\n      this.healPlayer();\n      this.bossFight = true;\n      this.gameView.switchGameInformation();\n    }\n  }\n  setWin() {\n    if (!this.gameOver) {\n      this.score *= this.player.health;\n      this.win = true;\n      this.sounds.playWinSound();\n    }\n  }\n  setGameOver() {\n    if (!this.win) {\n      this.gameOver = true;\n      this.sounds.playGameOverSound();\n    }\n  }\n  reset() {\n    this.enemyWave = 0;\n    this.addEnemyOnCooldown = true;\n    this.addedEnemies = 0;\n    this.enemiesRemaining = 0;\n    this.enemyWaveCount = 0;\n    this.score = 0;\n    this.gameOver = false;\n    this.win = false;\n    this.startScreen = false;\n    this.idCounter = 0;\n    this.timers = {};\n    this.allMovingObjects = {\n      player: {},\n      enemies: {},\n      projectiles: {},\n      explosions: {}\n    };\n    this.player = new _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    this.boss = null;\n    this.bossFight = false;\n    this.gameView.switchGameInformation();\n    this.sounds.reset();\n    this.sounds.switchBGM(\"waveBGM\");\n  }\n}\n_defineProperty(Game, \"MAX_ENEMY_WAVE\", 5);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/game_view.js":
/*!**********************************!*\
  !*** ./src/scripts/game_view.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n/* harmony import */ var _boss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boss */ \"./src/scripts/boss.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n// GameView handles anything canvas/html related, and event handlers\nclass GameView {\n  // player movement keybind mappings\n\n  // prevent shooting when clicking these html elements\n\n  constructor(canvas, ctx) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.canvasWidth = canvas.width;\n    this.canvasHeight = canvas.height;\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, this);\n\n    // html game info elements that get updated throughout the game\n    this.scoreSpan = document.getElementById(\"score\");\n    this.playerHealthBar = document.getElementById(\"player-health-bar\");\n    this.bossHealthBar = document.getElementById(\"boss-health-bar\");\n    this.bossInfo = document.getElementById(\"boss-info\");\n    this.waveInfo = document.getElementById(\"wave-info\");\n    this.waveSpan = document.getElementById(\"wave-number\");\n    this.enemiesRemainingSpan = document.getElementById(\"enemies-remaining\");\n\n    // moving background in the canvas element\n    // x, y are the background position offsets as it moves (only y changes)\n    // dy controls change in speed\n    const backgroundImg = new Image();\n    backgroundImg.src = \"src/assets/images/game_background.png\";\n    this.backgroundOptions = {\n      img: backgroundImg,\n      x: 0,\n      y: 0,\n      dy: 1\n    };\n\n    // mouse follow options\n    this.touchOnElement = document.getElementById(\"touch-on\");\n    this.touchOffElement = document.getElementById(\"touch-off\");\n    this.mouseFollow = false;\n    this.mousePosition = null; // {x: xValue, y: yValue}\n\n    // pause options\n    this.pauseOnElement = document.getElementById(\"pause-on\");\n    this.pauseOffElement = document.getElementById(\"pause-off\");\n    this.pauseText = document.getElementById(\"pause-text\");\n    this.pause = false;\n    this.toggleSound = false;\n\n    // only want to draw start, win, and game over messages once;\n    this.messageDrawn = false;\n    this.bindSettingListeners();\n    this.bindStartHandler();\n  }\n\n  // starts up the animate recursive call loop, and draws initial background\n  start() {\n    this.lastTime = 0;\n    this.drawBackground();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  // draw next state of the game, or start/win/game over message\n  animate(time) {\n    if (this.game.startScreen || this.game.gameOver || this.game.win) {\n      if (this.pause) this.handlePauseToggle();\n      this.drawStartWinGameOver();\n    } else if (!this.pause) {\n      this.draw();\n      this.updateGameInfo();\n      const timeDelta = time - this.lastTime;\n      this.game.step(timeDelta);\n    }\n    this.lastTime = time;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  // draw all game objects and moved background\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n    this.drawBackground();\n    for (let key in this.game.allMovingObjects) {\n      Object.values(this.game.allMovingObjects[key]).forEach(obj => obj.draw(this.ctx));\n    }\n  }\n\n  // moving the canvas background vertically downwards\n  drawBackground() {\n    const img = this.backgroundOptions.img;\n\n    // if end is reached, reset image back to beginning\n    if (this.backgroundOptions.y > this.canvasHeight) {\n      this.backgroundOptions.y = -img.height + this.backgroundOptions.y;\n    }\n\n    // if looping around, cut remaining end and draw below new\n    if (this.backgroundOptions.y > 0) {\n      this.ctx.drawImage(img, this.backgroundOptions.x, -img.height + this.backgroundOptions.y, img.width, img.height);\n    }\n\n    // draw background and then update new position\n    this.ctx.drawImage(img, this.backgroundOptions.x, this.backgroundOptions.y, img.width, img.height);\n    this.backgroundOptions.y += this.backgroundOptions.dy;\n  }\n\n  // update game info html elements\n  updateGameInfo() {\n    this.updateScore();\n    this.updateHealthBar('player');\n    if (this.game.bossFight) {\n      this.updateHealthBar('boss');\n    } else {\n      this.waveSpan.innerText = this.game.enemyWave;\n      this.enemiesRemainingSpan.innerText = this.game.enemiesRemaining;\n    }\n  }\n  updateScore() {\n    this.scoreSpan.innerText = this.game.score;\n  }\n\n  // update either boss or player hp\n  updateHealthBar(type) {\n    let obj, healthBar;\n    if (type === 'player') {\n      obj = this.game.player;\n      healthBar = this.playerHealthBar;\n    } else {\n      obj = this.game.boss;\n      healthBar = this.bossHealthBar;\n    }\n    let health = obj.health;\n    const healthPoint = document.createElement(\"li\");\n    healthPoint.setAttribute(\"class\", `${type}-health-point`);\n    if (type === 'boss') health = Math.ceil(health / (_boss__WEBPACK_IMPORTED_MODULE_1__[\"default\"].MAX_HEALTH / 10));\n    if (healthBar.children.length < health) {\n      for (let i = 0; i < health - healthBar.children.length; i++) {\n        healthBar.appendChild(healthPoint);\n      }\n    } else if (healthBar.children.length > health) {\n      for (let i = 0; i < healthBar.children.length - health; i++) {\n        const lastChild = healthBar.lastChild;\n        if (lastChild) healthBar.removeChild(healthBar.lastChild);\n      }\n    }\n  }\n\n  // switch between boss and enemy wave html elements \n  switchGameInformation() {\n    if (this.game.bossFight) {\n      this.waveInfo.style.display = \"none\";\n      this.bossInfo.style.display = \"flex\";\n    } else {\n      this.waveInfo.style.display = \"flex\";\n      this.bossInfo.style.display = \"none\";\n    }\n  }\n\n  // draw start/win/game over message once and remove player controls\n  drawStartWinGameOver() {\n    if (!this.messageDrawn) {\n      const message = this.game.startScreen ? [\"Press any key or click here to\", \"START\"] : this.game.gameOver ? \"GAME OVER\" : \"YOU WIN\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillStyle = \"white\";\n      if (this.game.startScreen) {\n        this.ctx.font = \"40px roboto\";\n        this.ctx.fillText(message[0], this.canvasWidth / 2, this.canvasHeight / 2 - 50);\n        this.ctx.font = \"48px roboto\";\n        this.ctx.fillText(message[1], this.canvasWidth / 2, this.canvasHeight / 2);\n      } else {\n        this.ctx.font = \"48px roboto\";\n        this.ctx.fillText(message, this.canvasWidth / 2, this.canvasHeight / 2);\n      }\n      this.messageDrawn = true;\n      if (this.game.gameOver || this.game.win) {\n        this.removeControlHandlers();\n        this.updateScore();\n        setTimeout(this.drawRetryKey.bind(this, this.ctx), 3000);\n      }\n      ;\n    }\n  }\n\n  // draw pause text\n  drawPause() {\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.font = \"48px roboto\";\n    this.ctx.fillText(\"PAUSED\", this.canvasWidth / 2, this.canvasHeight / 2);\n  }\n\n  // draw smaller retry text under win/game over, after a short while\n  drawRetryKey() {\n    this.ctx.font = \"24px roboto\";\n    this.ctx.fillText(\"(press any key or click here to retry)\", this.canvasWidth / 2, this.canvasHeight / 2 + 50);\n    this.bindRetryHandler();\n  }\n\n  // starting game\n  handleStartKey(event) {\n    if (event?.key === \" \") event.preventDefault();\n    this.game.sounds.switchBGM(\"waveBGM\");\n    this.game.startScreen = false;\n    document.removeEventListener(\"keypress\", this.startHandler);\n    this.canvas.removeEventListener(\"click\", this.startHandler);\n    this.bindControlHandlers();\n    setTimeout(this.game.resetAddEnemyCooldown.bind(this.game), 1500);\n    this.messageDrawn = false;\n  }\n  bindStartHandler() {\n    this.startHandler = this.handleStartKey.bind(this);\n    document.addEventListener(\"keypress\", this.startHandler);\n    this.canvas.addEventListener(\"click\", this.startHandler);\n  }\n\n  // retry on win/game over\n  handleRetryKey(event) {\n    if (event?.key === \" \") event.preventDefault();\n    document.removeEventListener(\"keypress\", this.retryHandler);\n    this.canvas.removeEventListener(\"click\", this.retryHandler);\n    this.game.reset();\n    this.bindControlHandlers();\n    setTimeout(this.game.resetAddEnemyCooldown.bind(this.game), 1500);\n    this.messageDrawn = false;\n  }\n  bindRetryHandler() {\n    this.retryHandler = this.handleRetryKey.bind(this);\n    document.addEventListener(\"keypress\", this.retryHandler);\n    this.canvas.addEventListener(\"click\", this.retryHandler);\n  }\n\n  // mouse/touch follow movements\n  handleMouseMove(event) {\n    const rect = this.canvas.getBoundingClientRect();\n    const xScale = this.canvas.width / rect.width;\n    const yScale = this.canvas.height / rect.height;\n    const x = (event.clientX - rect.left) * xScale;\n    const y = (event.clientY - rect.top) * yScale;\n    this.mousePosition = {\n      x,\n      y\n    };\n  }\n  handleMouseOut() {\n    this.mousePosition = null;\n  }\n  handleMouseFollowToggle() {\n    if (this.mouseFollow) {\n      this.touchOnElement.style.display = 'none';\n      this.touchOffElement.style.display = 'block';\n    } else {\n      this.touchOnElement.style.display = 'block';\n      this.touchOffElement.style.display = 'none';\n    }\n    this.mouseFollow = !this.mouseFollow;\n  }\n\n  // pause/unpause\n  handlePauseToggle() {\n    if ((this.game.startScreen || this.game.gameOver || this.game.win) && !this.pause) {\n      return;\n    }\n    if (this.pause) {\n      this.game.resumeTimers();\n      this.pauseOnElement.style.display = 'none';\n      this.pauseOffElement.style.display = 'block';\n      this.pauseText.innerText = 'pause';\n    } else {\n      this.game.pauseTimers();\n      this.pauseOnElement.style.display = 'block';\n      this.pauseOffElement.style.display = 'none';\n      this.pauseText.innerText = 'play';\n      this.drawPause();\n    }\n    this.pause = !this.pause;\n  }\n\n  // pause and mute when tabbed out or game is out of focus\n  handleVisibilityChange() {\n    if (document.hidden && !(this.game.startScreen || this.game.gameOver || this.game.win) && !this.pause) {\n      this.handlePauseToggle();\n    }\n    if (document.hidden && this.game.sounds.toggle) {\n      this.game.sounds.handleSoundToggle();\n      this.toggleSound = true;\n    } else if (!document.hidden && this.toggleSound) {\n      this.game.sounds.handleSoundToggle();\n      this.toggleSound = false;\n    }\n  }\n\n  // setting keybinds\n  handleSettingKeybinds(event) {\n    if (event.key === \" \") event.preventDefault();else if (event.key === \"m\") this.handleMouseFollowToggle();else if (event.key === \"k\") this.game.sounds.handleSoundToggle();else if (event.key === \"p\") this.handlePauseToggle();\n  }\n\n  // bind all setting related handlers (pause/unpause, mouse/touch follow, mute/unmute)\n  bindSettingListeners() {\n    document.addEventListener(\"keydown\", this.handleSettingKeybinds.bind(this));\n    const touchContainer = document.getElementById(\"touch-icons-container\");\n    touchContainer.addEventListener(\"click\", this.handleMouseFollowToggle.bind(this));\n    if ('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) {\n      document.getElementById(\"touch-text\").innerText = \"touch follow\";\n      this.handleMouseFollowToggle();\n    }\n    const pauseContainer = document.getElementById(\"pause-icons-container\");\n    pauseContainer.addEventListener(\"click\", this.handlePauseToggle.bind(this));\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange.bind(this));\n  }\n\n  // player controls (arrow/wasd to move, spacebar to shoot)\n  handleKeyDown(event) {\n    event.preventDefault();\n    if (GameView.RIGHT_KEYS.includes(event.key)) this.game.player.keysPressed.right = true;else if (GameView.LEFT_KEYS.includes(event.key)) this.game.player.keysPressed.left = true;else if (GameView.UP_KEYS.includes(event.key)) this.game.player.keysPressed.up = true;else if (GameView.DOWN_KEYS.includes(event.key)) this.game.player.keysPressed.down = true;else if (event.key === \" \") this.game.player.keysPressed.shoot = true;\n  }\n  handleKeyUp(event) {\n    if (event.key === \" \") event.preventDefault();\n    if (GameView.RIGHT_KEYS.includes(event.key)) this.game.player.keysPressed.right = false;else if (GameView.LEFT_KEYS.includes(event.key)) this.game.player.keysPressed.left = false;else if (GameView.UP_KEYS.includes(event.key)) this.game.player.keysPressed.up = false;else if (GameView.DOWN_KEYS.includes(event.key)) this.game.player.keysPressed.down = false;else if (event.key === \" \") this.game.player.keysPressed.shoot = false;\n  }\n\n  // mouse click/hold to shoot\n  handleMouseDown(event) {\n    const parentId = event.target.parentNode.id;\n    if (!GameView.IGNORE_TARGETS.includes(parentId)) this.game.player.keysPressed.shoot = true;\n  }\n  handleMouseUp() {\n    this.game.player.keysPressed.shoot = false;\n  }\n  bindControlHandlers() {\n    this.keyDownHandler = this.handleKeyDown.bind(this);\n    this.keyUpHandler = this.handleKeyUp.bind(this);\n    this.mouseDownHandler = this.handleMouseDown.bind(this);\n    this.mouseUpHandler = this.handleMouseUp.bind(this);\n    this.mouseMoveHandler = this.handleMouseMove.bind(this);\n    this.mouseOutHandler = this.handleMouseOut.bind(this);\n    document.addEventListener(\"keydown\", this.keyDownHandler);\n    document.addEventListener(\"keyup\", this.keyUpHandler);\n    document.addEventListener(\"pointerdown\", this.mouseDownHandler);\n    document.addEventListener(\"pointerup\", this.mouseUpHandler);\n    document.addEventListener(\"pointermove\", this.mouseMoveHandler);\n    document.addEventListener(\"pointerout\", this.mouseOutHandler);\n  }\n  removeControlHandlers() {\n    document.removeEventListener(\"keydown\", this.keyDownHandler);\n    document.removeEventListener(\"keyup\", this.keyUpHandler);\n    document.removeEventListener(\"pointerdown\", this.mouseDownHandler);\n    document.removeEventListener(\"pointerup\", this.mouseUpHandler);\n    document.removeEventListener(\"pointermove\", this.mouseMoveHandler);\n    document.removeEventListener(\"pointerout\", this.mouseOutHandler);\n  }\n}\n_defineProperty(GameView, \"UP_KEYS\", [\"ArrowUp\", 'w']);\n_defineProperty(GameView, \"DOWN_KEYS\", [\"ArrowDown\", 's']);\n_defineProperty(GameView, \"RIGHT_KEYS\", [\"ArrowRight\", 'd']);\n_defineProperty(GameView, \"LEFT_KEYS\", [\"ArrowLeft\", 'a']);\n_defineProperty(GameView, \"IGNORE_TARGETS\", [\"sound-on\", \"sound-off\", \"sound-icons-container\", \"touch-on\", \"touch-off\", \"touch-container\", \"pause-on\", \"pause-off\", \"pause-container\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game_view.js\n");

/***/ }),

/***/ "./src/scripts/moving_object.js":
/*!**************************************!*\
  !*** ./src/scripts/moving_object.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n// MovingObject is the top parent class for ships, projectiles, explosions, etc.\nclass MovingObject {\n  // for smoothing gameplay based on fps\n\n  constructor(argsObject) {\n    this.position = argsObject[\"position\"];\n    this.velocity = argsObject[\"velocity\"];\n    this.speed = argsObject[\"speed\"];\n    this.health = argsObject[\"health\"];\n    this.game = argsObject[\"game\"];\n    this.width = argsObject[\"width\"];\n    this.height = argsObject[\"height\"];\n    this.image = argsObject[\"image\"];\n    this.type = argsObject[\"type\"];\n    this.rotationAngle = argsObject[\"rotation\"] || 0;\n    this.id = this.game.idCounter++;\n    this.game.allMovingObjects[this.type][this.id] = this;\n  }\n  draw(ctx) {\n    // ctx.drawImage(this.image, this.position[0], this.position[1], this.width, this.height);\n\n    // rotate from center\n    const [x, y] = this.position;\n    const [centerX, centerY] = [x + this.width / 2, y + this.height / 2];\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(Math.PI / 180 * this.rotationAngle);\n    ctx.translate(-centerX, -centerY);\n    ctx.drawImage(this.image, x, y, this.width, this.height);\n    ctx.restore();\n  }\n\n  // checks collisions against all hitboxes of the object\n  // rectangleCollision is a utility function for mathematically determining collisions\n  // hitBoxCollisions is used by subclasses with more complex logic\n  collideCheck(otherObj) {\n    const hitBoxCollisions = [];\n    this.getHitbox().forEach((thisBox, idx) => {\n      const collisionFound = otherObj.getHitbox().some(otherBox => {\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.rectangleCollision)(thisBox, otherBox);\n      });\n      if (collisionFound) hitBoxCollisions.push(idx);\n    });\n    if (hitBoxCollisions.length > 0) {\n      this.handleCollided(otherObj, hitBoxCollisions);\n    }\n  }\n\n  // will be overwritten by subclasses with more complex logic\n  // two cases: enemy/player to projectile, player to enemy\n  handleCollided(otherObj) {\n    const otherObjClass = otherObj.constructor.name;\n    if (otherObjClass === \"Projectile\") {\n      const damage = otherObj.health;\n      otherObj.remove();\n      this.damageTaken(damage);\n    } else if (otherObjClass === \"EnemyShip\") {\n      const damage = 1;\n      this.damageTaken(damage);\n    } else if (otherObjClass === \"Boss\") {\n      const damage = 2;\n      this.damageTaken(damage);\n    }\n  }\n  getHitbox() {\n    const [x, y] = this.position;\n    const width = this.width;\n    const height = this.height;\n    return [{\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }];\n  }\n  move(timeDelta) {\n    this.updateVelocity();\n    const velocityScale = timeDelta / MovingObject.NORMAL_FRAME_TIME_DELTA;\n    const offsetX = this.velocity[0] * velocityScale;\n    const offsetY = this.velocity[1] * velocityScale;\n    const newX = this.position[0] + offsetX;\n    const newY = this.position[1] + offsetY;\n    this.handleBounds([newX, newY]);\n  }\n  handleBounds(newPosition) {\n    // to be changed in sub classes as needed\n    this.position = newPosition;\n  }\n  updateVelocity() {\n    // to be implemented in sub classes as needed\n  }\n  inUpperYHeightBounds(y) {\n    return y <= this.game.canvasHeight + this.height;\n  }\n  inUpperXBounds(x) {\n    return x >= 0;\n  }\n  inUpperYBounds(y) {\n    return y >= 0;\n  }\n  inLowerXBounds(x) {\n    return x <= this.game.canvasWidth - this.width;\n  }\n  inLowerYBounds(y) {\n    return y <= this.game.canvasHeight - this.height;\n  }\n  inXBounds(x) {\n    return this.inUpperXBounds(x) && this.inLowerXBounds(x);\n  }\n  inYBounds(y) {\n    return this.inUpperYBounds(y) && this.inLowerYBounds(y);\n  }\n  inBounds(position) {\n    return this.inXBounds(position[0]) && this.inYBounds(position[1]);\n  }\n  remove() {\n    delete this.game.allMovingObjects[this.type][this.id];\n  }\n}\n_defineProperty(MovingObject, \"NORMAL_FRAME_TIME_DELTA\", 1000 / 60);\n/* harmony default export */ __webpack_exports__[\"default\"] = (MovingObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RTtJQUNYLE9BQVEsSUFBSSxDQUFDMEMsY0FBYyxDQUFDMUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDNEMsY0FBYyxDQUFDNUMsQ0FBQyxDQUFDO0VBQzFEO0VBRUFnRCxTQUFTQSxDQUFDL0MsQ0FBQyxFQUFFO0lBQ1gsT0FBUSxJQUFJLENBQUMwQyxjQUFjLENBQUMxQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUM2QyxjQUFjLENBQUM3QyxDQUFDLENBQUM7RUFDMUQ7RUFFQWdELFFBQVFBLENBQUNoRSxRQUFRLEVBQUU7SUFDakIsT0FBTyxJQUFJLENBQUM4RCxTQUFTLENBQUM5RCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMrRCxTQUFTLENBQUMvRCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDbkU7RUFFQTBDLE1BQU1BLENBQUEsRUFBRztJQUNQLE9BQU8sSUFBSSxDQUFDdEMsSUFBSSxDQUFDUSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUNKLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQ0UsRUFBRSxDQUFDO0VBQ3ZEO0FBQ0Y7QUFBQ3VELGVBQUEsQ0EzSUtwRSxZQUFZLDZCQUVpQixJQUFJLEdBQUcsRUFBRTtBQTJJNUMsK0RBQWVBLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvc2NyaXB0cy9tb3Zpbmdfb2JqZWN0LmpzP2MyMDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVjdGFuZ2xlQ29sbGlzaW9uIH0gZnJvbSBcIi4vdXRpbHNcIjtcblxuLy8gTW92aW5nT2JqZWN0IGlzIHRoZSB0b3AgcGFyZW50IGNsYXNzIGZvciBzaGlwcywgcHJvamVjdGlsZXMsIGV4cGxvc2lvbnMsIGV0Yy5cbmNsYXNzIE1vdmluZ09iamVjdCB7XG4gIC8vIGZvciBzbW9vdGhpbmcgZ2FtZXBsYXkgYmFzZWQgb24gZnBzXG4gIHN0YXRpYyBOT1JNQUxfRlJBTUVfVElNRV9ERUxUQSA9IDEwMDAgLyA2MDtcblxuICBjb25zdHJ1Y3RvcihhcmdzT2JqZWN0KSB7XG4gICAgdGhpcy5wb3NpdGlvbiA9IGFyZ3NPYmplY3RbXCJwb3NpdGlvblwiXTtcbiAgICB0aGlzLnZlbG9jaXR5ID0gYXJnc09iamVjdFtcInZlbG9jaXR5XCJdO1xuICAgIHRoaXMuc3BlZWQgPSBhcmdzT2JqZWN0W1wic3BlZWRcIl07XG4gICAgdGhpcy5oZWFsdGggPSBhcmdzT2JqZWN0W1wiaGVhbHRoXCJdO1xuICAgIHRoaXMuZ2FtZSA9IGFyZ3NPYmplY3RbXCJnYW1lXCJdO1xuICAgIHRoaXMud2lkdGggPSBhcmdzT2JqZWN0W1wid2lkdGhcIl07XG4gICAgdGhpcy5oZWlnaHQgPSBhcmdzT2JqZWN0W1wiaGVpZ2h0XCJdO1xuICAgIHRoaXMuaW1hZ2UgPSBhcmdzT2JqZWN0W1wiaW1hZ2VcIl07XG4gICAgdGhpcy50eXBlID0gYXJnc09iamVjdFtcInR5cGVcIl07XG4gICAgdGhpcy5yb3RhdGlvbkFuZ2xlID0gYXJnc09iamVjdFtcInJvdGF0aW9uXCJdIHx8IDA7XG5cbiAgICB0aGlzLmlkID0gdGhpcy5nYW1lLmlkQ291bnRlcisrO1xuICAgIHRoaXMuZ2FtZS5hbGxNb3ZpbmdPYmplY3RzW3RoaXMudHlwZV1bdGhpcy5pZF0gPSB0aGlzO1xuICB9XG5cbiAgZHJhdyhjdHgpIHtcbiAgICAvLyBjdHguZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIHRoaXMucG9zaXRpb25bMF0sIHRoaXMucG9zaXRpb25bMV0sIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTtcblxuICAgIC8vIHJvdGF0ZSBmcm9tIGNlbnRlclxuICAgIGNvbnN0IFt4LCB5XSA9IHRoaXMucG9zaXRpb247XG4gICAgY29uc3QgW2NlbnRlclgsIGNlbnRlclldID0gW3ggKyAodGhpcy53aWR0aC8yKSwgeSArICh0aGlzLmhlaWdodC8yKV1cbiAgICBjdHguc2F2ZSgpO1xuICAgIGN0eC50cmFuc2xhdGUoY2VudGVyWCwgY2VudGVyWSk7XG4gICAgY3R4LnJvdGF0ZSgoTWF0aC5QSSAvIDE4MCkgKiB0aGlzLnJvdGF0aW9uQW5nbGUpO1xuICAgIGN0eC50cmFuc2xhdGUoLWNlbnRlclgsIC1jZW50ZXJZKTtcbiAgICBjdHguZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIHgsIHksIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTtcbiAgICBjdHgucmVzdG9yZSgpO1xuICB9XG5cbiAgLy8gY2hlY2tzIGNvbGxpc2lvbnMgYWdhaW5zdCBhbGwgaGl0Ym94ZXMgb2YgdGhlIG9iamVjdFxuICAvLyByZWN0YW5nbGVDb2xsaXNpb24gaXMgYSB1dGlsaXR5IGZ1bmN0aW9uIGZvciBtYXRoZW1hdGljYWxseSBkZXRlcm1pbmluZyBjb2xsaXNpb25zXG4gIC8vIGhpdEJveENvbGxpc2lvbnMgaXMgdXNlZCBieSBzdWJjbGFzc2VzIHdpdGggbW9yZSBjb21wbGV4IGxvZ2ljXG4gIGNvbGxpZGVDaGVjayhvdGhlck9iaikge1xuICAgIGNvbnN0IGhpdEJveENvbGxpc2lvbnMgPSBbXTtcblxuICAgIHRoaXMuZ2V0SGl0Ym94KCkuZm9yRWFjaCgodGhpc0JveCwgaWR4KSA9PiB7XG4gICAgICBjb25zdCBjb2xsaXNpb25Gb3VuZCA9IG90aGVyT2JqLmdldEhpdGJveCgpLnNvbWUob3RoZXJCb3ggPT4geyBcbiAgICAgICAgcmV0dXJuIHJlY3RhbmdsZUNvbGxpc2lvbih0aGlzQm94LCBvdGhlckJveCkgXG4gICAgICB9KVxuXG4gICAgICBpZiAoY29sbGlzaW9uRm91bmQpIGhpdEJveENvbGxpc2lvbnMucHVzaChpZHgpOyBcbiAgICB9KVxuXG4gICAgaWYgKGhpdEJveENvbGxpc2lvbnMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5oYW5kbGVDb2xsaWRlZChvdGhlck9iaiwgaGl0Qm94Q29sbGlzaW9ucyk7XG4gICAgfVxuICB9XG5cbiAgLy8gd2lsbCBiZSBvdmVyd3JpdHRlbiBieSBzdWJjbGFzc2VzIHdpdGggbW9yZSBjb21wbGV4IGxvZ2ljXG4gIC8vIHR3byBjYXNlczogZW5lbXkvcGxheWVyIHRvIHByb2plY3RpbGUsIHBsYXllciB0byBlbmVteVxuICBoYW5kbGVDb2xsaWRlZChvdGhlck9iaikge1xuICAgIGNvbnN0IG90aGVyT2JqQ2xhc3MgPSBvdGhlck9iai5jb25zdHJ1Y3Rvci5uYW1lO1xuXG4gICAgaWYgKG90aGVyT2JqQ2xhc3MgPT09IFwiUHJvamVjdGlsZVwiKSB7XG4gICAgICBjb25zdCBkYW1hZ2UgPSBvdGhlck9iai5oZWFsdGg7XG4gICAgICBvdGhlck9iai5yZW1vdmUoKTtcbiAgICAgIHRoaXMuZGFtYWdlVGFrZW4oZGFtYWdlKTtcbiAgICB9IGVsc2UgaWYgKG90aGVyT2JqQ2xhc3MgPT09IFwiRW5lbXlTaGlwXCIpIHtcbiAgICAgIGNvbnN0IGRhbWFnZSA9IDE7XG4gICAgICB0aGlzLmRhbWFnZVRha2VuKGRhbWFnZSk7XG4gICAgfSBlbHNlIGlmIChvdGhlck9iakNsYXNzID09PSBcIkJvc3NcIikge1xuICAgICAgY29uc3QgZGFtYWdlID0gMjtcbiAgICAgIHRoaXMuZGFtYWdlVGFrZW4oZGFtYWdlKTtcbiAgICB9XG4gIH1cblxuICBnZXRIaXRib3goKSB7XG4gICAgY29uc3QgW3gsIHldID0gdGhpcy5wb3NpdGlvbjtcbiAgICBjb25zdCB3aWR0aCA9IHRoaXMud2lkdGg7XG4gICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5oZWlnaHQ7XG4gICAgcmV0dXJuIFt7XG4gICAgICB4OiB4LFxuICAgICAgeTogeSxcbiAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgIGhlaWdodDogaGVpZ2h0XG4gICAgfV1cbiAgfVxuXG4gIG1vdmUodGltZURlbHRhKSB7XG4gICAgdGhpcy51cGRhdGVWZWxvY2l0eSgpO1xuICAgIGNvbnN0IHZlbG9jaXR5U2NhbGUgPSB0aW1lRGVsdGEgLyBNb3ZpbmdPYmplY3QuTk9STUFMX0ZSQU1FX1RJTUVfREVMVEE7XG4gICAgY29uc3Qgb2Zmc2V0WCA9IHRoaXMudmVsb2NpdHlbMF0gKiB2ZWxvY2l0eVNjYWxlO1xuICAgIGNvbnN0IG9mZnNldFkgPSB0aGlzLnZlbG9jaXR5WzFdICogdmVsb2NpdHlTY2FsZTtcblxuICAgIGNvbnN0IG5ld1ggPSB0aGlzLnBvc2l0aW9uWzBdICsgb2Zmc2V0WDtcbiAgICBjb25zdCBuZXdZID0gdGhpcy5wb3NpdGlvblsxXSArIG9mZnNldFk7XG5cbiAgICB0aGlzLmhhbmRsZUJvdW5kcyhbbmV3WCwgbmV3WV0pXG4gIH1cblxuICBoYW5kbGVCb3VuZHMobmV3UG9zaXRpb24pIHtcbiAgICAvLyB0byBiZSBjaGFuZ2VkIGluIHN1YiBjbGFzc2VzIGFzIG5lZWRlZFxuICAgIHRoaXMucG9zaXRpb24gPSBuZXdQb3NpdGlvbjtcbiAgfVxuXG4gIHVwZGF0ZVZlbG9jaXR5KCkge1xuICAgIC8vIHRvIGJlIGltcGxlbWVudGVkIGluIHN1YiBjbGFzc2VzIGFzIG5lZWRlZFxuICB9XG5cbiAgaW5VcHBlcllIZWlnaHRCb3VuZHMoeSkge1xuICAgIHJldHVybiAoeSA8PSB0aGlzLmdhbWUuY2FudmFzSGVpZ2h0ICsgdGhpcy5oZWlnaHQpO1xuICB9XG5cbiAgaW5VcHBlclhCb3VuZHMoeCkge1xuICAgIHJldHVybiAoeCA+PSAwKTtcbiAgfVxuXG4gIGluVXBwZXJZQm91bmRzKHkpIHtcbiAgICByZXR1cm4gKHkgPj0gMCk7XG4gIH1cblxuICBpbkxvd2VyWEJvdW5kcyh4KSB7XG4gICAgcmV0dXJuICh4IDw9IHRoaXMuZ2FtZS5jYW52YXNXaWR0aCAtIHRoaXMud2lkdGgpO1xuICB9XG5cbiAgaW5Mb3dlcllCb3VuZHMoeSkge1xuICAgIHJldHVybiAoeSA8PSB0aGlzLmdhbWUuY2FudmFzSGVpZ2h0IC0gdGhpcy5oZWlnaHQpO1xuICB9XG5cbiAgaW5YQm91bmRzKHgpIHtcbiAgICByZXR1cm4gKHRoaXMuaW5VcHBlclhCb3VuZHMoeCkgJiYgdGhpcy5pbkxvd2VyWEJvdW5kcyh4KSk7XG4gIH1cblxuICBpbllCb3VuZHMoeSkge1xuICAgIHJldHVybiAodGhpcy5pblVwcGVyWUJvdW5kcyh5KSAmJiB0aGlzLmluTG93ZXJZQm91bmRzKHkpKTtcbiAgfVxuXG4gIGluQm91bmRzKHBvc2l0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5YQm91bmRzKHBvc2l0aW9uWzBdKSAmJiB0aGlzLmluWUJvdW5kcyhwb3NpdGlvblsxXSk7XG4gIH1cblxuICByZW1vdmUoKSB7XG4gICAgZGVsZXRlIHRoaXMuZ2FtZS5hbGxNb3ZpbmdPYmplY3RzW3RoaXMudHlwZV1bdGhpcy5pZF07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTW92aW5nT2JqZWN0OyJdLCJuYW1lcyI6WyJyZWN0YW5nbGVDb2xsaXNpb24iLCJNb3ZpbmdPYmplY3QiLCJjb25zdHJ1Y3RvciIsImFyZ3NPYmplY3QiLCJwb3NpdGlvbiIsInZlbG9jaXR5Iiwic3BlZWQiLCJoZWFsdGgiLCJnYW1lIiwid2lkdGgiLCJoZWlnaHQiLCJpbWFnZSIsInR5cGUiLCJyb3RhdGlvbkFuZ2xlIiwiaWQiLCJpZENvdW50ZXIiLCJhbGxNb3ZpbmdPYmplY3RzIiwiZHJhdyIsImN0eCIsIngiLCJ5IiwiY2VudGVyWCIsImNlbnRlclkiLCJzYXZlIiwidHJhbnNsYXRlIiwicm90YXRlIiwiTWF0aCIsIlBJIiwiZHJhd0ltYWdlIiwicmVzdG9yZSIsImNvbGxpZGVDaGVjayIsIm90aGVyT2JqIiwiaGl0Qm94Q29sbGlzaW9ucyIsImdldEhpdGJveCIsImZvckVhY2giLCJ0aGlzQm94IiwiaWR4IiwiY29sbGlzaW9uRm91bmQiLCJzb21lIiwib3RoZXJCb3giLCJwdXNoIiwibGVuZ3RoIiwiaGFuZGxlQ29sbGlkZWQiLCJvdGhlck9iakNsYXNzIiwibmFtZSIsImRhbWFnZSIsInJlbW92ZSIsImRhbWFnZVRha2VuIiwibW92ZSIsInRpbWVEZWx0YSIsInVwZGF0ZVZlbG9jaXR5IiwidmVsb2NpdHlTY2FsZSIsIk5PUk1BTF9GUkFNRV9USU1FX0RFTFRBIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJuZXdYIiwibmV3WSIsImhhbmRsZUJvdW5kcyIsIm5ld1Bvc2l0aW9uIiwiaW5VcHBlcllIZWlnaHRCb3VuZHMiLCJjYW52YXNIZWlnaHQiLCJpblVwcGVyWEJvdW5kcyIsImluVXBwZXJZQm91bmRzIiwiaW5Mb3dlclhCb3VuZHMiLCJjYW52YXNXaWR0aCIsImluTG93ZXJZQm91bmRzIiwiaW5YQm91bmRzIiwiaW5ZQm91bmRzIiwiaW5Cb3VuZHMiLCJfZGVmaW5lUHJvcGVydHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/moving_object.js\n");

/***/ }),

/***/ "./src/scripts/player_ship.js":
/*!************************************!*\
  !*** ./src/scripts/player_ship.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\nclass PlayerShip extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // static MAX_HEALTH = -2;\n\n  constructor(game) {\n    // Ship/MovingObject related arguments\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/images/player1.png\";\n    let height = 48;\n    let width = 37;\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [Math.floor(game.canvasWidth / 2), game.canvasHeight - height],\n      velocity: [0, 0],\n      speed: PlayerShip.SPEED,\n      health: PlayerShip.MAX_HEALTH,\n      game: game,\n      image: image,\n      type: \"player\"\n    };\n\n    // Projectile related arguments\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/images/player_projectile.png\";\n    const projectileArgs = [{\n      objArgs: {\n        velocity: [0, -10],\n        speed: 10,\n        health: 1,\n        game: game,\n        width: 5,\n        height: 20,\n        image: image\n      },\n      type: \"bullet\",\n      origin: \"player\",\n      projectileSound: \"playerProjectile\"\n    }];\n\n    // projectile pattern\n    const patternArgs = [{\n      positionDeltas: [[width / 2.3, 0]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      // batchFireNum: 3,\n      // batchFireInterval: 75,\n      cooldown: 250,\n      onCooldown: false,\n      projectileArgIndex: 0\n    }];\n    super(objArgs, projectileArgs, patternArgs);\n\n    // player controlled movements\n    this.keysPressed = {\n      up: false,\n      down: false,\n      left: false,\n      right: false,\n      shoot: false\n    };\n    this.disabled = false;\n    this.invincible = false;\n  }\n\n  // player ship unique hitboxes\n  getHitbox() {\n    const box1 = {\n      x: this.position[0] + this.width / 3,\n      y: this.position[1],\n      width: this.width / 3,\n      height: this.height\n    };\n    const box2 = {\n      x: this.position[0],\n      y: this.position[1] + this.height * .65,\n      width: this.width,\n      height: this.height / 5\n    };\n    return [box1, box2];\n  }\n\n  // velocity updated based on player controlled movements\n  updateVelocity() {\n    let newVelocity = [0, 0];\n\n    // when disabled, player auto moves downwards\n    if (this.disabled) {\n      newVelocity[1] = 2;\n    } else if (this.game.gameView.mouseFollow && this.game.gameView.mousePosition) {\n      // mouse/touch controlled movement handling\n      // movement is smoothed out for finer controls\n      const xDiff = this.game.gameView.mousePosition.x - (this.position[0] + this.width / 2);\n      const yDiff = this.game.gameView.mousePosition.y - (this.position[1] + this.height / 2);\n      const deadzone = 2;\n      if (xDiff > deadzone) {\n        newVelocity[0] += Math.min(this.speed, xDiff);\n      } else if (xDiff < -deadzone) {\n        newVelocity[0] -= Math.min(this.speed, -xDiff);\n      }\n      if (yDiff > deadzone) {\n        newVelocity[1] += Math.min(this.speed, yDiff);\n      } else if (yDiff < -deadzone) {\n        newVelocity[1] -= Math.min(this.speed, -yDiff);\n      }\n      if (newVelocity[0] && newVelocity[1]) {\n        const speed = (Math.abs(newVelocity[0]) + Math.abs(newVelocity[1])) / 2;\n        newVelocity = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.vectorScale)(newVelocity, speed);\n      }\n    } else {\n      // keyboard controlled movement handling\n      if (this.keysPressed.right) newVelocity[0] += this.speed;\n      if (this.keysPressed.left) newVelocity[0] -= this.speed;\n      if (this.keysPressed.up) newVelocity[1] -= this.speed;\n      if (this.keysPressed.down) newVelocity[1] += this.speed;\n      if (newVelocity[0] && newVelocity[1]) newVelocity = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.vectorScale)(newVelocity, this.speed);\n    }\n    this.velocity = newVelocity;\n  }\n\n  // shooting also controlled by player\n  shootProjectile() {\n    if (this.keysPressed.shoot && !this.disabled) super.shootProjectile();\n  }\n\n  // player must be within game screen at all times\n  handleBounds(newPosition) {\n    if (this.inXBounds(newPosition[0])) this.position[0] = newPosition[0];\n    if (this.inYBounds(newPosition[1])) this.position[1] = newPosition[1];\n  }\n\n  // player gets 1 sec of invicibility after taking damage\n  damageTaken(damage) {\n    if (!this.invincible) {\n      super.damageTaken(damage);\n      this.invincible = true;\n      this.game.sounds.playPlayerHurtSound();\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.resetInvincibility.bind(this), 1000);\n    }\n  }\n  resetInvincibility() {\n    this.invincible = false;\n  }\n\n  // player unique death animation, and activates game over logic\n  remove() {\n    if (!this.disabled) {\n      this.disabled = true;\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n        const posX = this.position[0] - 40;\n        const posY = this.position[1] - 20;\n        new _explosion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 100, [posX, posY], \"major\", [0, 0]);\n        super.remove();\n        this.game.sounds.playPlayerDeathSound();\n        new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.game.setGameOver.bind(this.game), 3000);\n      }, 1000);\n    }\n  }\n}\n_defineProperty(PlayerShip, \"SPEED\", 5);\n_defineProperty(PlayerShip, \"MAX_HEALTH\", 10);\n/* harmony default export */ __webpack_exports__[\"default\"] = (PlayerShip);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player_ship.js\n");

/***/ }),

/***/ "./src/scripts/projectile.js":
/*!***********************************!*\
  !*** ./src/scripts/projectile.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n\nclass Projectile extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // Projectile health determines damage dealt\n  constructor(args) {\n    args.objArgs.type = \"projectiles\";\n    super(args.objArgs);\n    this.origin = args.origin;\n  }\n\n  // projectiles are also removed when they collide with ships, handled by Ship objects\n  handleBounds(newPosition) {\n    if (!this.inBounds(newPosition)) {\n      super.remove();\n    } else {\n      this.position = newPosition;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Projectile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wcm9qZWN0aWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQTJDO0FBRTNDLE1BQU1DLFVBQVUsU0FBU0Qsc0RBQVksQ0FBQztFQUNwQztFQUNBRSxXQUFXQSxDQUFDQyxJQUFJLEVBQUU7SUFDaEJBLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLEdBQUcsYUFBYTtJQUNqQyxLQUFLLENBQUNGLElBQUksQ0FBQ0MsT0FBTyxDQUFDO0lBQ25CLElBQUksQ0FBQ0UsTUFBTSxHQUFHSCxJQUFJLENBQUNHLE1BQU07RUFDM0I7O0VBRUE7RUFDQUMsWUFBWUEsQ0FBQ0MsV0FBVyxFQUFFO0lBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQ0QsV0FBVyxDQUFDLEVBQUU7TUFDL0IsS0FBSyxDQUFDRSxNQUFNLEVBQUU7SUFDaEIsQ0FBQyxNQUFNO01BQ0wsSUFBSSxDQUFDQyxRQUFRLEdBQUdILFdBQVc7SUFDN0I7RUFDRjtBQUNGO0FBRUEsK0RBQWVQLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvc2NyaXB0cy9wcm9qZWN0aWxlLmpzP2ZmNTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1vdmluZ09iamVjdCBmcm9tIFwiLi9tb3Zpbmdfb2JqZWN0XCI7XG5cbmNsYXNzIFByb2plY3RpbGUgZXh0ZW5kcyBNb3ZpbmdPYmplY3Qge1xuICAvLyBQcm9qZWN0aWxlIGhlYWx0aCBkZXRlcm1pbmVzIGRhbWFnZSBkZWFsdFxuICBjb25zdHJ1Y3RvcihhcmdzKSB7XG4gICAgYXJncy5vYmpBcmdzLnR5cGUgPSBcInByb2plY3RpbGVzXCI7XG4gICAgc3VwZXIoYXJncy5vYmpBcmdzKTtcbiAgICB0aGlzLm9yaWdpbiA9IGFyZ3Mub3JpZ2luO1xuICB9XG5cbiAgLy8gcHJvamVjdGlsZXMgYXJlIGFsc28gcmVtb3ZlZCB3aGVuIHRoZXkgY29sbGlkZSB3aXRoIHNoaXBzLCBoYW5kbGVkIGJ5IFNoaXAgb2JqZWN0c1xuICBoYW5kbGVCb3VuZHMobmV3UG9zaXRpb24pIHtcbiAgICBpZiAoIXRoaXMuaW5Cb3VuZHMobmV3UG9zaXRpb24pKSB7XG4gICAgICBzdXBlci5yZW1vdmUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wb3NpdGlvbiA9IG5ld1Bvc2l0aW9uXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb2plY3RpbGU7Il0sIm5hbWVzIjpbIk1vdmluZ09iamVjdCIsIlByb2plY3RpbGUiLCJjb25zdHJ1Y3RvciIsImFyZ3MiLCJvYmpBcmdzIiwidHlwZSIsIm9yaWdpbiIsImhhbmRsZUJvdW5kcyIsIm5ld1Bvc2l0aW9uIiwiaW5Cb3VuZHMiLCJyZW1vdmUiLCJwb3NpdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/projectile.js\n");

/***/ }),

/***/ "./src/scripts/ship.js":
/*!*****************************!*\
  !*** ./src/scripts/ship.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projectile */ \"./src/scripts/projectile.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n\n\n\n\n// Ship is the top parent class for player, enemy, and boss ships\nclass Ship extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(objArgs, projectileArgs, patternArgs) {\n    super(objArgs);\n    this.projectileArgs = projectileArgs;\n    this.patternArgs = patternArgs;\n  }\n\n  // ships can have multiple projectile patterns and possible batch firing\n  // each pattern has it's own cooldown\n  shootProjectile() {\n    this.patternArgs.forEach((pattern, idx) => {\n      // fire pattern if off cooldown and ship in game bounds\n      if (!pattern.onCooldown && this.inBounds(this.position)) {\n        // batch firing\n        for (let i = 0; i < pattern.batchFireNum; i++) {\n          new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n            // only fire if ship still alive when timer callback activates\n            if (this.health > 0) {\n              // create new Projectile at each position in the pattern\n              pattern.positionDeltas.forEach(delta => {\n                const [x, y] = this.position;\n                const [dx, dy] = delta;\n                const startPosition = [x + dx, y + dy];\n                const projArgs = this.projectileArgs[pattern.projectileArgIndex];\n                projArgs.objArgs.position = startPosition;\n                new _projectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"](projArgs);\n              });\n            }\n          }, pattern.batchFireInterval * i);\n        }\n\n        // play projectile sound\n        const projSound = this.projectileArgs[pattern.projectileArgIndex].projectileSound;\n        this.playShootSound(projSound);\n\n        // set cooldown and start timer to reset it\n        pattern.onCooldown = true;\n        const batchCooldownOffset = pattern.batchFireInterval * pattern.batchFireNum;\n        new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.resetCooldown.bind(this, idx), pattern.cooldown + batchCooldownOffset);\n      }\n    });\n  }\n  playShootSound(projectileSound) {\n    this.game.sounds.add(projectileSound);\n  }\n  resetCooldown(index) {\n    this.patternArgs[index].onCooldown = false;\n  }\n  damageTaken(damage) {\n    this.health -= damage;\n    if (this.health <= 0) this.remove();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ship);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDLEVBQUUsSUFBSSxDQUFDdUIsTUFBTSxFQUFFO0VBQ3JDO0FBQ0Y7QUFFQSwrREFBZXRDLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvc2NyaXB0cy9zaGlwLmpzPzU1MDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1vdmluZ09iamVjdCBmcm9tIFwiLi9tb3Zpbmdfb2JqZWN0XCI7XG5pbXBvcnQgUHJvamVjdGlsZSBmcm9tIFwiLi9wcm9qZWN0aWxlXCI7XG5pbXBvcnQgVGltZXIgZnJvbSBcIi4vdGltZXJcIjtcblxuLy8gU2hpcCBpcyB0aGUgdG9wIHBhcmVudCBjbGFzcyBmb3IgcGxheWVyLCBlbmVteSwgYW5kIGJvc3Mgc2hpcHNcbmNsYXNzIFNoaXAgZXh0ZW5kcyBNb3ZpbmdPYmplY3Qge1xuICBjb25zdHJ1Y3RvcihvYmpBcmdzLCBwcm9qZWN0aWxlQXJncywgcGF0dGVybkFyZ3MpIHtcbiAgICBzdXBlcihvYmpBcmdzKTtcbiAgICB0aGlzLnByb2plY3RpbGVBcmdzID0gcHJvamVjdGlsZUFyZ3M7XG4gICAgdGhpcy5wYXR0ZXJuQXJncyA9IHBhdHRlcm5BcmdzO1xuICB9XG5cbiAgLy8gc2hpcHMgY2FuIGhhdmUgbXVsdGlwbGUgcHJvamVjdGlsZSBwYXR0ZXJucyBhbmQgcG9zc2libGUgYmF0Y2ggZmlyaW5nXG4gIC8vIGVhY2ggcGF0dGVybiBoYXMgaXQncyBvd24gY29vbGRvd25cbiAgc2hvb3RQcm9qZWN0aWxlKCkge1xuICAgIHRoaXMucGF0dGVybkFyZ3MuZm9yRWFjaCgocGF0dGVybiwgaWR4KSA9PiB7XG4gICAgICAvLyBmaXJlIHBhdHRlcm4gaWYgb2ZmIGNvb2xkb3duIGFuZCBzaGlwIGluIGdhbWUgYm91bmRzXG4gICAgICBpZiAoIXBhdHRlcm4ub25Db29sZG93biAmJiB0aGlzLmluQm91bmRzKHRoaXMucG9zaXRpb24pKSB7XG4gICAgICAgIC8vIGJhdGNoIGZpcmluZ1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhdHRlcm4uYmF0Y2hGaXJlTnVtOyBpICsrKSB7XG4gICAgICAgICAgbmV3IFRpbWVyKHRoaXMuZ2FtZSwgKCkgPT4ge1xuICAgICAgICAgICAgLy8gb25seSBmaXJlIGlmIHNoaXAgc3RpbGwgYWxpdmUgd2hlbiB0aW1lciBjYWxsYmFjayBhY3RpdmF0ZXNcbiAgICAgICAgICAgIGlmICh0aGlzLmhlYWx0aCA+IDApIHtcbiAgICAgICAgICAgICAgLy8gY3JlYXRlIG5ldyBQcm9qZWN0aWxlIGF0IGVhY2ggcG9zaXRpb24gaW4gdGhlIHBhdHRlcm5cbiAgICAgICAgICAgICAgcGF0dGVybi5wb3NpdGlvbkRlbHRhcy5mb3JFYWNoKGRlbHRhID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBbeCwgeV0gPSB0aGlzLnBvc2l0aW9uO1xuICAgICAgICAgICAgICAgIGNvbnN0IFtkeCwgZHldID0gZGVsdGE7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhcnRQb3NpdGlvbiA9IFt4ICsgZHgsIHkgKyBkeV07XG5cbiAgICAgICAgICAgICAgICBjb25zdCBwcm9qQXJncyA9IHRoaXMucHJvamVjdGlsZUFyZ3NbcGF0dGVybi5wcm9qZWN0aWxlQXJnSW5kZXhdO1xuICAgICAgICAgICAgICAgIHByb2pBcmdzLm9iakFyZ3MucG9zaXRpb24gPSBzdGFydFBvc2l0aW9uO1xuXG4gICAgICAgICAgICAgICAgbmV3IFByb2plY3RpbGUocHJvakFyZ3MpO1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHBhdHRlcm4uYmF0Y2hGaXJlSW50ZXJ2YWwgKiBpKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gcGxheSBwcm9qZWN0aWxlIHNvdW5kXG4gICAgICAgIGNvbnN0IHByb2pTb3VuZCA9IHRoaXMucHJvamVjdGlsZUFyZ3NbcGF0dGVybi5wcm9qZWN0aWxlQXJnSW5kZXhdLnByb2plY3RpbGVTb3VuZDtcbiAgICAgICAgdGhpcy5wbGF5U2hvb3RTb3VuZChwcm9qU291bmQpO1xuICAgICAgICBcbiAgICAgICAgLy8gc2V0IGNvb2xkb3duIGFuZCBzdGFydCB0aW1lciB0byByZXNldCBpdFxuICAgICAgICBwYXR0ZXJuLm9uQ29vbGRvd24gPSB0cnVlO1xuICAgICAgICBjb25zdCBiYXRjaENvb2xkb3duT2Zmc2V0ID0gcGF0dGVybi5iYXRjaEZpcmVJbnRlcnZhbCAqIHBhdHRlcm4uYmF0Y2hGaXJlTnVtO1xuICAgICAgICBuZXcgVGltZXIodGhpcy5nYW1lLCB0aGlzLnJlc2V0Q29vbGRvd24uYmluZCh0aGlzLCBpZHgpLCAocGF0dGVybi5jb29sZG93biArIGJhdGNoQ29vbGRvd25PZmZzZXQpKTtcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgcGxheVNob290U291bmQocHJvamVjdGlsZVNvdW5kKSB7XG4gICAgdGhpcy5nYW1lLnNvdW5kcy5hZGQocHJvamVjdGlsZVNvdW5kKTtcbiAgfVxuXG4gIHJlc2V0Q29vbGRvd24oaW5kZXgpIHtcbiAgICB0aGlzLnBhdHRlcm5BcmdzW2luZGV4XS5vbkNvb2xkb3duID0gZmFsc2U7XG4gIH1cblxuICBkYW1hZ2VUYWtlbihkYW1hZ2UpIHtcbiAgICB0aGlzLmhlYWx0aCAtPSBkYW1hZ2U7XG4gICAgaWYgKHRoaXMuaGVhbHRoIDw9IDApIHRoaXMucmVtb3ZlKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2hpcDsiXSwibmFtZXMiOlsiTW92aW5nT2JqZWN0IiwiUHJvamVjdGlsZSIsIlRpbWVyIiwiU2hpcCIsImNvbnN0cnVjdG9yIiwib2JqQXJncyIsInByb2plY3RpbGVBcmdzIiwicGF0dGVybkFyZ3MiLCJzaG9vdFByb2plY3RpbGUiLCJmb3JFYWNoIiwicGF0dGVybiIsImlkeCIsIm9uQ29vbGRvd24iLCJpbkJvdW5kcyIsInBvc2l0aW9uIiwiaSIsImJhdGNoRmlyZU51bSIsImdhbWUiLCJoZWFsdGgiLCJwb3NpdGlvbkRlbHRhcyIsImRlbHRhIiwieCIsInkiLCJkeCIsImR5Iiwic3RhcnRQb3NpdGlvbiIsInByb2pBcmdzIiwicHJvamVjdGlsZUFyZ0luZGV4IiwiYmF0Y2hGaXJlSW50ZXJ2YWwiLCJwcm9qU291bmQiLCJwcm9qZWN0aWxlU291bmQiLCJwbGF5U2hvb3RTb3VuZCIsImJhdGNoQ29vbGRvd25PZmZzZXQiLCJyZXNldENvb2xkb3duIiwiYmluZCIsImNvb2xkb3duIiwic291bmRzIiwiYWRkIiwiaW5kZXgiLCJkYW1hZ2VUYWtlbiIsImRhbWFnZSIsInJlbW92ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/ship.js\n");

/***/ }),

/***/ "./src/scripts/sound.js":
/*!******************************!*\
  !*** ./src/scripts/sound.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// Sound class creates and handles all game sounds\nclass Sound {\n  constructor(game) {\n    this.waveBGM = document.createElement(\"audio\");\n    this.waveBGM.src = \"src/assets/sounds/wave_bgm.mp3\";\n    this.waveBGM.preload = 'auto';\n    this.waveBGM.loop = true;\n    this.bossIncomingBGM = document.createElement(\"audio\");\n    this.bossIncomingBGM.src = \"src/assets/sounds/boss_incoming_bgm.mp3\";\n    this.bossIncomingBGM.preload = 'auto';\n    this.bossIncomingBGM.loop = true;\n    this.bossBGM = document.createElement(\"audio\");\n    this.bossBGM.src = \"src/assets/sounds/boss_bgm.mp3\";\n    this.bossBGM.preload = 'auto';\n    this.bossBGM.loop = true;\n    this.playerDeathSound = document.createElement(\"audio\");\n    this.playerDeathSound.src = \"src/assets/sounds/player_death.wav\";\n    this.playerDeathSound.preload = 'auto';\n    this.playerDeathSound.volume = 0.2;\n    this.bossDeathSound = document.createElement(\"audio\");\n    this.bossDeathSound.src = \"src/assets/sounds/boss_death.mp3\";\n    this.bossDeathSound.preload = 'auto';\n    this.gameOverSound = document.createElement(\"audio\");\n    this.gameOverSound.src = \"src/assets/sounds/game_over.mp3\";\n    this.gameOverSound.preload = 'auto';\n    this.winSound = document.createElement(\"audio\");\n    this.winSound.src = \"src/assets/sounds/win.mp3\";\n    this.winSound.preload = 'auto';\n    this.winSound.volume = 0.3;\n    this.playerHurtSound = document.createElement(\"audio\");\n    this.playerHurtSound.src = \"src/assets/sounds/player_hurt.wav\";\n    this.playerHurtSound.preload = 'auto';\n    this.audioSources = {\n      defaultProjectile: \"src/assets/sounds/default_laser.wav\",\n      playerProjectile: \"src/assets/sounds/player_laser.wav\",\n      enemyProjectile: \"src/assets/sounds/enemy_laser.wav\",\n      bossProjectile: \"src/assets/sounds/boss_projectile.wav\",\n      explosion: \"src/assets/sounds/explosion.wav\"\n    };\n    this.currentBGM = this.waveBGM;\n    this.soundId = 0;\n    this.currentSounds = {};\n    this.toggle = false;\n    this.game = game;\n    this.soundOnElement = document.getElementById(\"sound-on\");\n    this.soundOffElement = document.getElementById(\"sound-off\");\n    this.soundTextElement = document.getElementById(\"sound-text\");\n    this.bindToggleListener();\n  }\n\n  // switching the background music\n  switchBGM(key) {\n    this.currentBGM.pause();\n    this.currentBGM.currentTime = 0;\n    this.currentBGM = this[key];\n    if (this.toggle) this.currentBGM.play();\n  }\n  playPlayerDeathSound() {\n    this.currentBGM.pause();\n    if (this.toggle) this.playerDeathSound.play();\n  }\n  playBossDeathSound() {\n    this.currentBGM.pause();\n    if (this.toggle) this.bossDeathSound.play();\n  }\n  playGameOverSound() {\n    this.currentBGM.pause();\n    if (this.toggle) this.gameOverSound.play();\n  }\n  playWinSound() {\n    this.currentBGM.pause();\n    if (this.toggle) this.winSound.play();\n  }\n  playPlayerHurtSound() {\n    if (this.toggle) this.playerHurtSound.play();\n  }\n\n  // sound toggling\n  toggleOff() {\n    this.currentBGM.pause();\n    this.reset();\n    this.toggle = false;\n  }\n  toggleOn() {\n    if (!this.game.startScreen && !this.game.gameOver && !this.game.win) {\n      this.currentBGM.play();\n    }\n    this.toggle = true;\n  }\n\n  // adding projectile and explosion sounds, to be called in other classes as needed\n  add(audioSourceKey) {\n    if (this.toggle) {\n      const newAudio = document.createElement(\"audio\");\n      newAudio.src = this.audioSources[audioSourceKey];\n      if (audioSourceKey === \"enemyProjectile\") newAudio.volume = 0.02;\n      const id = this.soundId++;\n      this.currentSounds[id] = newAudio;\n      newAudio.onended = () => delete this.currentSounds[id];\n      newAudio.play().then(() => {\n        if (!this.toggle) newAudio.pause();\n      });\n    }\n  }\n\n  // only pause when playing, to avoid asynchronous play() issues\n  isPlaying(audio) {\n    return audio.currentTime > 0 && !audio.paused && !audio.ended;\n  }\n  reset() {\n    this.bossDeathSound.pause();\n    this.bossDeathSound.currentTime = 0;\n    this.playerDeathSound.pause();\n    this.playerDeathSound.currentTime = 0;\n    this.gameOverSound.pause();\n    this.gameOverSound.currentTime = 0;\n    this.winSound.pause();\n    this.winSound.currentTime = 0;\n    this.playerHurtSound.pause();\n    this.playerHurtSound.currentTime = 0;\n    this.waveBGM.pause();\n    this.waveBGM.currentTime = 0;\n    this.bossIncomingBGM.pause();\n    this.bossIncomingBGM.currentTime = 0;\n    this.bossBGM.pause();\n    this.bossBGM.currentTime = 0;\n    Object.values(this.currentSounds).forEach(sound => {\n      if (this.isPlaying(sound)) sound.pause();\n    });\n    this.currentSounds = {};\n  }\n  bindToggleListener() {\n    const soundContainer = document.getElementById(\"sound-icons-container\");\n    soundContainer.addEventListener(\"click\", this.handleSoundToggle.bind(this));\n  }\n  handleSoundToggle() {\n    if (this.toggle) {\n      this.toggleOff();\n      this.soundOnElement.style.display = 'none';\n      this.soundOffElement.style.display = 'block';\n      this.soundTextElement.innerHTML = \"muted\";\n    } else {\n      this.toggleOn();\n      this.soundOnElement.style.display = 'block';\n      this.soundOffElement.style.display = 'none';\n      this.soundTextElement.innerHTML = \"sound on\";\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sound);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sound.js\n");

/***/ }),

/***/ "./src/scripts/timer.js":
/*!******************************!*\
  !*** ./src/scripts/timer.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// Timer class wraps setTimeouts with added pause and resume functionality\nclass Timer {\n  constructor(game, callback, delay) {\n    // all Timers are kept tracked of in Game.timers\n    this.game = game;\n    this.id = this.game.idCounter++;\n    this.game.timers[this.id] = this;\n\n    //  Timers will also delete themselves after the callback is played\n    this.timerCallback = () => {\n      callback();\n      delete this.game.timers[this.id];\n    };\n    this.startTime = Date.now();\n    this.delay = delay;\n    this.timeoutId = setTimeout(this.timerCallback.bind(this), this.delay);\n  }\n\n  // pause and resume simply clear and create setTimeouts with new remaining delays\n  pause() {\n    clearTimeout(this.timeoutId);\n    this.delay -= Date.now() - this.startTime;\n  }\n  resume() {\n    this.startTime = Date.now();\n    this.timeoutId = setTimeout(this.timerCallback.bind(this), this.delay);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Timer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aW1lci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQSxNQUFNQSxLQUFLLENBQUM7RUFDVkMsV0FBV0EsQ0FBQ0MsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLEtBQUssRUFBRTtJQUNqQztJQUNBLElBQUksQ0FBQ0YsSUFBSSxHQUFHQSxJQUFJO0lBQ2hCLElBQUksQ0FBQ0csRUFBRSxHQUFHLElBQUksQ0FBQ0gsSUFBSSxDQUFDSSxTQUFTLEVBQUU7SUFDL0IsSUFBSSxDQUFDSixJQUFJLENBQUNLLE1BQU0sQ0FBQyxJQUFJLENBQUNGLEVBQUUsQ0FBQyxHQUFHLElBQUk7O0lBRWhDO0lBQ0EsSUFBSSxDQUFDRyxhQUFhLEdBQUcsTUFBTTtNQUN6QkwsUUFBUSxFQUFFO01BQ1YsT0FBTyxJQUFJLENBQUNELElBQUksQ0FBQ0ssTUFBTSxDQUFDLElBQUksQ0FBQ0YsRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFFRCxJQUFJLENBQUNJLFNBQVMsR0FBR0MsSUFBSSxDQUFDQyxHQUFHLEVBQUU7SUFDM0IsSUFBSSxDQUFDUCxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDUSxTQUFTLEdBQUdDLFVBQVUsQ0FBQyxJQUFJLENBQUNMLGFBQWEsQ0FBQ00sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQ1YsS0FBSyxDQUFDO0VBQ3hFOztFQUVBO0VBQ0FXLEtBQUtBLENBQUEsRUFBRztJQUNOQyxZQUFZLENBQUMsSUFBSSxDQUFDSixTQUFTLENBQUM7SUFDNUIsSUFBSSxDQUFDUixLQUFLLElBQUlNLElBQUksQ0FBQ0MsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDRixTQUFTO0VBQzNDO0VBRUFRLE1BQU1BLENBQUEsRUFBRztJQUNQLElBQUksQ0FBQ1IsU0FBUyxHQUFHQyxJQUFJLENBQUNDLEdBQUcsRUFBRTtJQUMzQixJQUFJLENBQUNDLFNBQVMsR0FBR0MsVUFBVSxDQUFDLElBQUksQ0FBQ0wsYUFBYSxDQUFDTSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDVixLQUFLLENBQUM7RUFDeEU7QUFDRjtBQUVBLCtEQUFlSixLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvdGltZXIuanM/MTVhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaW1lciBjbGFzcyB3cmFwcyBzZXRUaW1lb3V0cyB3aXRoIGFkZGVkIHBhdXNlIGFuZCByZXN1bWUgZnVuY3Rpb25hbGl0eVxuY2xhc3MgVGltZXIge1xuICBjb25zdHJ1Y3RvcihnYW1lLCBjYWxsYmFjaywgZGVsYXkpIHtcbiAgICAvLyBhbGwgVGltZXJzIGFyZSBrZXB0IHRyYWNrZWQgb2YgaW4gR2FtZS50aW1lcnNcbiAgICB0aGlzLmdhbWUgPSBnYW1lO1xuICAgIHRoaXMuaWQgPSB0aGlzLmdhbWUuaWRDb3VudGVyKys7XG4gICAgdGhpcy5nYW1lLnRpbWVyc1t0aGlzLmlkXSA9IHRoaXM7XG5cbiAgICAvLyAgVGltZXJzIHdpbGwgYWxzbyBkZWxldGUgdGhlbXNlbHZlcyBhZnRlciB0aGUgY2FsbGJhY2sgaXMgcGxheWVkXG4gICAgdGhpcy50aW1lckNhbGxiYWNrID0gKCkgPT4ge1xuICAgICAgY2FsbGJhY2soKTtcbiAgICAgIGRlbGV0ZSB0aGlzLmdhbWUudGltZXJzW3RoaXMuaWRdO1xuICAgIH1cblxuICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB0aGlzLmRlbGF5ID0gZGVsYXk7XG4gICAgdGhpcy50aW1lb3V0SWQgPSBzZXRUaW1lb3V0KHRoaXMudGltZXJDYWxsYmFjay5iaW5kKHRoaXMpLCB0aGlzLmRlbGF5KTtcbiAgfVxuXG4gIC8vIHBhdXNlIGFuZCByZXN1bWUgc2ltcGx5IGNsZWFyIGFuZCBjcmVhdGUgc2V0VGltZW91dHMgd2l0aCBuZXcgcmVtYWluaW5nIGRlbGF5c1xuICBwYXVzZSgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWQpO1xuICAgIHRoaXMuZGVsYXkgLT0gRGF0ZS5ub3coKSAtIHRoaXMuc3RhcnRUaW1lO1xuICB9XG5cbiAgcmVzdW1lKCkge1xuICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB0aGlzLnRpbWVvdXRJZCA9IHNldFRpbWVvdXQodGhpcy50aW1lckNhbGxiYWNrLmJpbmQodGhpcyksIHRoaXMuZGVsYXkpXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGltZXI7Il0sIm5hbWVzIjpbIlRpbWVyIiwiY29uc3RydWN0b3IiLCJnYW1lIiwiY2FsbGJhY2siLCJkZWxheSIsImlkIiwiaWRDb3VudGVyIiwidGltZXJzIiwidGltZXJDYWxsYmFjayIsInN0YXJ0VGltZSIsIkRhdGUiLCJub3ciLCJ0aW1lb3V0SWQiLCJzZXRUaW1lb3V0IiwiYmluZCIsInBhdXNlIiwiY2xlYXJUaW1lb3V0IiwicmVzdW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/timer.js\n");

/***/ }),

/***/ "./src/scripts/utils.js":
/*!******************************!*\
  !*** ./src/scripts/utils.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rectangleCollision\": function() { return /* binding */ rectangleCollision; },\n/* harmony export */   \"vectorScale\": function() { return /* binding */ vectorScale; }\n/* harmony export */ });\n// vector and collision math related helper functions go here\n// rectangle to rectangle collision \nfunction rectangleCollision(box1, box2) {\n  return box1.x < box2.x + box2.width && box1.x + box1.width > box2.x && box1.y < box2.y + box2.height && box1.height + box1.y > box2.y;\n}\n\n// angled rectangle collision (seperate axis theorem)\n\n// rectangle to circle collision\n\n// circle to circle collision\n\n// vector scaling calculation\nfunction vectorScale(vector, newMagnitude) {\n  const magnitude = Math.sqrt(vector[0] ** 2 + vector[1] ** 2);\n  const scale = newMagnitude / magnitude;\n  return [vector[0] * scale, vector[1] * scale];\n}\n\n// vector calculation between two points\n\n// new angle calculation//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy91dGlscy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDTyxTQUFTQSxrQkFBa0JBLENBQUNDLElBQUksRUFBRUMsSUFBSSxFQUFFO0VBQzdDLE9BQ0VELElBQUksQ0FBQ0UsQ0FBQyxHQUFHRCxJQUFJLENBQUNDLENBQUMsR0FBR0QsSUFBSSxDQUFDRSxLQUFLLElBQzVCSCxJQUFJLENBQUNFLENBQUMsR0FBR0YsSUFBSSxDQUFDRyxLQUFLLEdBQUdGLElBQUksQ0FBQ0MsQ0FBQyxJQUM1QkYsSUFBSSxDQUFDSSxDQUFDLEdBQUdILElBQUksQ0FBQ0csQ0FBQyxHQUFHSCxJQUFJLENBQUNJLE1BQU0sSUFDN0JMLElBQUksQ0FBQ0ssTUFBTSxHQUFHTCxJQUFJLENBQUNJLENBQUMsR0FBR0gsSUFBSSxDQUFDRyxDQUFDO0FBRWpDOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ08sU0FBU0UsV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxZQUFZLEVBQUU7RUFDaEQsTUFBTUMsU0FBUyxHQUFHQyxJQUFJLENBQUNDLElBQUksQ0FBQ0osTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsR0FBR0EsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsQ0FBQztFQUN4RCxNQUFNSyxLQUFLLEdBQUdKLFlBQVksR0FBQ0MsU0FBUztFQUNwQyxPQUFPLENBQUNGLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBR0ssS0FBSyxFQUFFTCxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUdLLEtBQUssQ0FBQztBQUMvQzs7QUFFQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL3V0aWxzLmpzP2RiMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdmVjdG9yIGFuZCBjb2xsaXNpb24gbWF0aCByZWxhdGVkIGhlbHBlciBmdW5jdGlvbnMgZ28gaGVyZVxuLy8gcmVjdGFuZ2xlIHRvIHJlY3RhbmdsZSBjb2xsaXNpb24gXG5leHBvcnQgZnVuY3Rpb24gcmVjdGFuZ2xlQ29sbGlzaW9uKGJveDEsIGJveDIpIHtcbiAgcmV0dXJuIChcbiAgICBib3gxLnggPCBib3gyLnggKyBib3gyLndpZHRoICYmXG4gICAgYm94MS54ICsgYm94MS53aWR0aCA+IGJveDIueCAmJlxuICAgIGJveDEueSA8IGJveDIueSArIGJveDIuaGVpZ2h0ICYmXG4gICAgYm94MS5oZWlnaHQgKyBib3gxLnkgPiBib3gyLnlcbiAgKVxufVxuXG4vLyBhbmdsZWQgcmVjdGFuZ2xlIGNvbGxpc2lvbiAoc2VwZXJhdGUgYXhpcyB0aGVvcmVtKVxuXG4vLyByZWN0YW5nbGUgdG8gY2lyY2xlIGNvbGxpc2lvblxuXG4vLyBjaXJjbGUgdG8gY2lyY2xlIGNvbGxpc2lvblxuXG4vLyB2ZWN0b3Igc2NhbGluZyBjYWxjdWxhdGlvblxuZXhwb3J0IGZ1bmN0aW9uIHZlY3RvclNjYWxlKHZlY3RvciwgbmV3TWFnbml0dWRlKSB7XG4gIGNvbnN0IG1hZ25pdHVkZSA9IE1hdGguc3FydCh2ZWN0b3JbMF0qKjIgKyB2ZWN0b3JbMV0qKjIpO1xuICBjb25zdCBzY2FsZSA9IG5ld01hZ25pdHVkZS9tYWduaXR1ZGU7XG4gIHJldHVybiBbdmVjdG9yWzBdICogc2NhbGUsIHZlY3RvclsxXSAqIHNjYWxlXVxufVxuXG4vLyB2ZWN0b3IgY2FsY3VsYXRpb24gYmV0d2VlbiB0d28gcG9pbnRzXG5cbi8vIG5ldyBhbmdsZSBjYWxjdWxhdGlvbiJdLCJuYW1lcyI6WyJyZWN0YW5nbGVDb2xsaXNpb24iLCJib3gxIiwiYm94MiIsIngiLCJ3aWR0aCIsInkiLCJoZWlnaHQiLCJ2ZWN0b3JTY2FsZSIsInZlY3RvciIsIm5ld01hZ25pdHVkZSIsIm1hZ25pdHVkZSIsIk1hdGgiLCJzcXJ0Iiwic2NhbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/utils.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;