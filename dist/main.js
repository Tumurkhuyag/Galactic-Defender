/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game_view */ \"./src/scripts/game_view.js\");\n\nwindow.canvas = document.getElementById(\"game-view\");\nwindow.ctx = canvas.getContext(\"2d\");\ncanvas.width = 700;\ncanvas.height = 550;\nconst view = new _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, ctx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBMkM7QUFFM0NDLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxXQUFXLENBQUM7QUFDcERILE1BQU0sQ0FBQ0ksR0FBRyxHQUFHSCxNQUFNLENBQUNJLFVBQVUsQ0FBQyxJQUFJLENBQUM7QUFDcENKLE1BQU0sQ0FBQ0ssS0FBSyxHQUFHLEdBQUc7QUFDbEJMLE1BQU0sQ0FBQ00sTUFBTSxHQUFHLEdBQUc7QUFFbkIsTUFBTUMsSUFBSSxHQUFHLElBQUlULDBEQUFRLENBQUNFLE1BQU0sRUFBRUcsR0FBRyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWVWaWV3IGZyb20gXCIuL3NjcmlwdHMvZ2FtZV92aWV3XCI7XG5cbndpbmRvdy5jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdhbWUtdmlld1wiKTtcbndpbmRvdy5jdHggPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuY2FudmFzLndpZHRoID0gNzAwO1xuY2FudmFzLmhlaWdodCA9IDU1MDtcblxuY29uc3QgdmlldyA9IG5ldyBHYW1lVmlldyhjYW52YXMsIGN0eCk7Il0sIm5hbWVzIjpbIkdhbWVWaWV3Iiwid2luZG93IiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImN0eCIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsInZpZXciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/boss.js":
/*!*****************************!*\
  !*** ./src/scripts/boss.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projectile */ \"./src/scripts/projectile.js\");\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n/* harmony import */ var _explosion2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./explosion2 */ \"./src/scripts/explosion2.js\");\n\n\n\n\n\nclass Boss extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game) {\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/boss1.png\";\n    let height = 220;\n    // let width = game.canvasWidth/2;\n    let width = 250;\n    // let health = 20;\n    let health = 1;\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [game.canvasWidth / 2 - width / 2, 0 - height],\n      velocity: [0, 1],\n      // velocity: [0, 5],\n      health: health,\n      game: game,\n      image: image\n    };\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/enemy_projectile.png\";\n    const projectileArgs = {\n      objArgs: {\n        velocity: [0, 8],\n        health: 1,\n        game: game,\n        width: 10,\n        height: 40,\n        image: image\n      },\n      origin: \"enemy\",\n      cooldown: 1000,\n      xAdjustment: .45,\n      yAdjustment: 0\n    };\n    super(objArgs, projectileArgs);\n    this.shootOnCooldown = true;\n\n    // maybe add a disabled flag\n    this.disabled = false;\n    this.pattern1 = [[18, 200], [width - 32, 200]];\n    this.pattern1Cooldown = 1000;\n    this.pattern1OnCooldown = true;\n    this.pattern2 = [[60, 210], [this.width - 76, 210]];\n    this.pattern2Cooldown = 1000;\n    this.pattern2OnCooldown = false;\n    this.pattern3 = [[75, 180], [this.width - 88, 180]];\n    this.pattern3Cooldown = 1000;\n    this.pattern3OnCooldown = false;\n    this.pattern4 = [[100, 160], [this.width - 110, 160]];\n    this.pattern4Cooldown = 1000;\n    this.pattern4OnCooldown = false;\n\n    // array of dx, dy\n    // add seperate cooldowns for each pattern later\n    this.projectilePositions = [...this.pattern1];\n  }\n  getHitbox() {\n    // weakspot\n    const box1 = {\n      x: this.position[0] + 85,\n      y: this.position[1] + 90,\n      width: 80,\n      height: 70\n    };\n    const box2 = {\n      x: this.position[0] + 10,\n      y: this.position[1] + 90,\n      width: (this.width - 100) / 2,\n      height: this.height - 110\n    };\n    const box3 = {\n      x: this.position[0] + 165,\n      y: this.position[1] + 90,\n      width: (this.width - 100) / 2,\n      height: this.height - 110\n    };\n    const box4 = {\n      x: this.position[0] + 45,\n      y: this.position[1] + 30,\n      width: 155,\n      height: 60\n    };\n    return [box1, box2, box3, box4];\n  }\n  collideCheck(otherObj) {\n    const thisHitboxes = this.getHitbox();\n    const otherHitboxes = otherObj.getHitbox();\n    let hitboxesCollided = {};\n    thisHitboxes.forEach((thisBox, idx) => {\n      hitboxesCollided[idx] = false;\n      return otherHitboxes.forEach(otherBox => {\n        if (this.rectangleCollision(thisBox, otherBox)) {\n          hitboxesCollided[idx] = true;\n        }\n      });\n    });\n    if (Object.values(hitboxesCollided).some(found => found)) {\n      this.handleCollided(otherObj, hitboxesCollided);\n    }\n  }\n  handleCollided(otherObj, hitboxesCollided) {\n    const otherObjClass = otherObj.constructor.name;\n    if (otherObjClass === \"Projectile\") {\n      const damage = otherObj.health;\n      otherObj.remove();\n      if (hitboxesCollided[0]) this.damageTaken(damage);\n    }\n  }\n  updateVelocity() {\n    if (this.position[1] > 0) {\n      const speed = 1.5;\n      if (this.velocity[0] === 0 || this.position[0] < 0) {\n        if (this.velocity[0] === 0) {\n          setTimeout(this.resetCooldown.bind(this), 1250);\n          this.game.player.disabled = false;\n          this.game.healPlayer();\n        }\n        this.velocity = [speed, 0];\n      } else if (this.position[0] > this.game.canvasWidth - this.width) {\n        this.velocity = [-speed, 0];\n      }\n    }\n\n    // for testing purposes, make boss stationary\n    // if (this.position[1] > 0) {\n    //   // this.position[1] = 0;\n    //   // this.disabled = true;\n    //   if (this.velocity[1] !== 0) {\n    //     // this.shootOnCooldown = false;\n    //     setTimeout(this.resetCooldown.bind(this), 1000)\n    //     this.game.player.disabled = false;\n    //   }\n    //   this.velocity = [0, 0];\n    // }\n  }\n\n  // draw() {\n  //   var c = document.getElementById(\"game-view\");\n  //   var ctx = c.getContext(\"2d\");\n  //   super.draw(ctx);\n\n  //   const box1 = {\n  //     x: this.position[0] + 85,\n  //     y: this.position[1] + 90,\n  //     width: 80,\n  //     height: 70\n  //   }\n  //   ctx.beginPath();\n  //   ctx.rect(box1.x, box1.y, box1.width, box1.height);\n  //   ctx.strokeStyle = \"red\";\n  //   ctx.stroke();\n\n  //   ctx.beginPath();\n  //   const box2 = {\n  //     x: this.position[0] + 10,\n  //     y: this.position[1] + 90,\n  //     width: (this.width - 100) / 2,\n  //     height: this.height - 110\n  //   }\n  //   ctx.rect(box2.x, box2.y, box2.width, box2.height);\n  //   ctx.strokeStyle = \"red\";\n  //   ctx.stroke();\n\n  //   const box3 = {\n  //     x: this.position[0] + 165,\n  //     y: this.position[1] + 90,\n  //     width: (this.width - 100) / 2,\n  //     height: this.height - 110\n  //   }\n  //   ctx.beginPath();\n  //   ctx.rect(box3.x, box3.y, box3.width, box3.height);\n  //   ctx.strokeStyle = \"red\";\n  //   ctx.stroke();\n\n  //   const box4 = {\n  //     x: this.position[0] + 45,\n  //     y: this.position[1] + 30,\n  //     width: 155,\n  //     height: 60\n  //   }\n  //   ctx.beginPath();\n  //   ctx.rect(box4.x, box4.y, box4.width, box4.height);\n  //   ctx.strokeStyle = \"red\";\n  //   ctx.stroke();\n  // }\n\n  move(timeDelta) {\n    this.updateVelocity();\n    this.updateShootingPattern();\n    const velocityScale = timeDelta / _moving_object__WEBPACK_IMPORTED_MODULE_2__[\"default\"].NORMAL_FRAME_TIME_DELTA;\n    const offsetX = this.velocity[0] * velocityScale;\n    const offsetY = this.velocity[1] * velocityScale;\n    const newPos = this.position;\n    newPos[0] += offsetX;\n    newPos[1] += offsetY;\n    this.position = newPos;\n    if (!this.disabled) {\n      if (!this.shootOnCooldown) {\n        this.shootProjectile();\n        this.shootOnCooldown = true;\n        setTimeout(this.resetCooldown.bind(this), this.cooldown);\n      }\n      if (!this.pattern1OnCooldown) {}\n      if (!this.pattern2OnCooldown && this.health < 20) {}\n      if (!this.pattern3OnCooldown && this.health < 15) {}\n      if (!this.pattern4OnCooldown && this.health < 10) {}\n    }\n  }\n  shootProjectile() {\n    //update this to handle different pattern\n    if (!this.shootOnCooldown) {\n      this.projectilePositions.forEach(pos => {\n        const copy = structuredClone(this.position);\n        const projPos = [copy[0] + pos[0], copy[1] + pos[1]];\n        this.projectileArgs.objArgs.position = projPos;\n        const projectile = new _projectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.projectileArgs);\n        this.game.allMovingObjects.projectiles.push(projectile);\n      });\n    }\n  }\n\n  // resetCooldown(patternNum) {\n  //   this[`pattern${patternNum}OnCooldown`] = false;\n  // }\n\n  updateShootingPattern() {\n    if (this.health < 10) {\n      this.projectilePositions = [...this.pattern1, ...this.pattern2, ...this.pattern3, ...this.pattern4];\n    } else if (this.health < 15) {\n      this.projectilePositions = [...this.pattern1, ...this.pattern2, ...this.pattern3];\n    } else if (this.health < 20) {\n      this.projectilePositions = [...this.pattern1, ...this.pattern2];\n    }\n  }\n  damageTaken(damage) {\n    if (!this.disabled) {\n      super.damageTaken(damage);\n      if (this.health <= 0) {\n        this.game.score += 1000;\n        this.disabled = true;\n\n        // const hitBoxes = this.getHitbox();\n        // hitBoxes.forEach((hitbox) => {\n        //   for (let i = 0; i < 10; i++) {\n        //     try {\n        //       const randPosX = Math.floor(Math.random() * ((hitbox.x + hitbox.width) - hitbox.x)) + hitbox.x;\n        //       const randPosY = Math.floor(Math.random() * ((hitbox.y + hitbox.height) - hitbox.y) + hitbox.y);\n        //       const randTime = Math.floor(Math.random() * (1000 - 100) + 100);\n        //       const explosion = new Explosion(this.game, 80, [randPosX - 100, randPosY - 20]);\n        //       explosion.dy = 0.5;\n        //       // explosion.dx = (this.velocity[0]/3)\n        //       setTimeout(() => {\n        //         this.game.allMovingObjects.explosions.push(explosion);\n        //       }, randTime);\n        //     } catch(error) {\n        //       // console.error();\n        //       // console.log(this.game);\n        //     }\n        //   }\n        // })\n\n        for (let i = 0; i < 50; i++) {\n          try {\n            const newX = this.position[0] + this.velocity[0];\n            const newY = this.position[1] + this.velocity[1];\n            const randPosX = Math.floor(Math.random() * (newX + this.width - newX) + newX);\n            const randPosY = Math.floor(Math.random() * (newY + this.height - newY) + newY);\n            const randTime = Math.floor(Math.random() * (1500 - 100) + 100);\n            const multiplier = this.velocity[0] < 0 ? 1 : -1;\n            const dx = this.velocity[0] < 0 ? 100 : 30;\n            const explosion = new _explosion__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.game, 80, [randPosX - dx * multiplier, randPosY - 20]);\n            explosion.dy = 0.5;\n            explosion.dx = this.velocity[0] / 3 * multiplier;\n            explosion.velocity[0] = this.velocity[0];\n            setTimeout(() => {\n              this.game.allMovingObjects.explosions.push(explosion);\n            }, randTime);\n          } catch (error) {\n            // console.error();\n            // console.log(this.game);\n          }\n        }\n        setTimeout(() => {\n          this.remove();\n          try {\n            const multiplier = this.velocity[0] < 0 ? 1 : -1;\n            const posX = this.position[0] - this.width / 2;\n            const posY = this.position[1] - this.height / 1.5;\n            const finalExplosion = new _explosion2__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.game, 500, [posX - 20 * multiplier, posY]);\n            this.game.allMovingObjects.explosions.push(finalExplosion);\n          } catch (error) {\n            // console.error();\n            // console.log(this.game);\n          }\n          setTimeout(this.game.setWin.bind(this.game), 2000);\n        }, 1500);\n      }\n    }\n  }\n  remove() {\n    const enemies = this.game.allMovingObjects.enemies;\n    enemies[enemies.indexOf(this)] = null;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Boss);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/boss.js\n");

/***/ }),

/***/ "./src/scripts/enemy_ship.js":
/*!***********************************!*\
  !*** ./src/scripts/enemy_ship.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n\n\n\nclass EnemyShip extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game, posX, speed, cooldown) {\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/enemy1.png\";\n    let height = 40;\n    let width = 46;\n\n    // scale based on wave here or do it within game.setEnemy\n    let health = 1 + Math.floor(game.enemyWave / 2.5); // update this\n\n    if (posX < 0 - width) {\n      posX = 0;\n    } else if (posX > game.canvasWidth - width) {\n      posX = game.canvasWidth - width;\n    }\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [posX, 0 - height],\n      velocity: [0, speed],\n      health: health,\n      game: game,\n      image: image\n    };\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/enemy_projectile.png\";\n    const projectileArgs = {\n      objArgs: {\n        velocity: [0, 8],\n        health: 1,\n        game: game,\n        width: 5,\n        height: 20,\n        image: image\n      },\n      origin: \"enemy\",\n      cooldown: cooldown,\n      xAdjustment: .25,\n      yAdjustment: 10\n    };\n    super(objArgs, projectileArgs);\n  }\n  move(timeDelta) {\n    const velocityScale = timeDelta / _moving_object__WEBPACK_IMPORTED_MODULE_1__[\"default\"].NORMAL_FRAME_TIME_DELTA;\n    const offsetX = this.velocity[0] * velocityScale;\n    const offsetY = this.velocity[1] * velocityScale;\n    const newX = this.position[0] + offsetX;\n    const newY = this.position[1] + offsetY;\n\n    // collision against enemy/player logic here?\n    // create seperate collision checking function in game class\n    if (!this.shootOnCooldown) {\n      // do this within shoot function\n      this.shootProjectile();\n      this.shootOnCooldown = true; // do this within shoot function\n      setTimeout(this.resetCooldown.bind(this), this.cooldown); //do this within shoot function\n    }\n\n    if (!this.inYBounds(newY)) {\n      this.remove();\n    } else {\n      this.position = [newX, newY];\n    }\n  }\n  inYBounds(y) {\n    return y <= this.game.canvasHeight + this.height;\n  }\n  remove() {\n    const enemies = this.game.allMovingObjects.enemies;\n    enemies[enemies.indexOf(this)] = null;\n    this.game.enemiesRemaining -= 1;\n  }\n  damageTaken(damage) {\n    super.damageTaken(damage);\n    if (this.health <= 0) {\n      // add new explosion animation to game.allMovingObjects.explosions\n      try {\n        const explosion = new _explosion__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, 80, this.position);\n        this.game.allMovingObjects.explosions.push(explosion);\n      } catch (error) {\n        // console.error();\n        // console.log(this.game);\n      }\n      this.remove();\n      // update score and add explosion animation here later\n      this.game.score += 10;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (EnemyShip);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/enemy_ship.js\n");

/***/ }),

/***/ "./src/scripts/explosion.js":
/*!**********************************!*\
  !*** ./src/scripts/explosion.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n\nclass Explosion extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game, size, position) {\n    const image = document.createElement(\"img\");\n    image.src = \"src/assets/explosion1.png\";\n    const argsObj = {\n      position: position,\n      velocity: [0, 0],\n      health: 0,\n      // health won't matter for explosion\n      game: game,\n      width: size,\n      height: size,\n      image: image\n    };\n    super(argsObj);\n    this.frame = 0;\n    this.dy = 1;\n    this.dx = 0;\n  }\n  draw(ctx) {\n    const yOffset = Math.floor(this.frame / 5);\n    const xOffset = this.frame % 5;\n    // console.log(xOffset, yOffset);\n    ctx.drawImage(this.image, 192 * xOffset, 192 * yOffset, 192, 192, this.position[0], this.position[1], this.width, this.height);\n    this.frame += 1;\n    this.velocity[0] += this.dx;\n    this.velocity[1] += this.dy;\n\n    // remove once this.frame >= 20\n    if (this.frame >= 20) {\n      this.remove();\n    }\n  }\n\n  // remove once animation frame limit reached\n  remove() {\n    const explosions = this.game.allMovingObjects.explosions;\n    explosions[explosions.indexOf(this)] = null;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Explosion);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9leHBsb3Npb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBMkM7QUFFM0MsTUFBTUMsU0FBUyxTQUFTRCxzREFBWSxDQUFDO0VBQ25DRSxXQUFXQSxDQUFDQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFO0lBQ2hDLE1BQU1DLEtBQUssR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsS0FBSyxDQUFDO0lBQzNDRixLQUFLLENBQUNHLEdBQUcsR0FBRywyQkFBMkI7SUFFdkMsTUFBTUMsT0FBTyxHQUFHO01BQ2RMLFFBQVEsRUFBRUEsUUFBUTtNQUNsQk0sUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztNQUNoQkMsTUFBTSxFQUFFLENBQUM7TUFBRztNQUNaVCxJQUFJLEVBQUVBLElBQUk7TUFDVlUsS0FBSyxFQUFFVCxJQUFJO01BQ1hVLE1BQU0sRUFBRVYsSUFBSTtNQUNaRSxLQUFLLEVBQUVBO0lBQ1QsQ0FBQztJQUNELEtBQUssQ0FBQ0ksT0FBTyxDQUFDO0lBRWQsSUFBSSxDQUFDSyxLQUFLLEdBQUcsQ0FBQztJQUNkLElBQUksQ0FBQ0MsRUFBRSxHQUFHLENBQUM7SUFDWCxJQUFJLENBQUNDLEVBQUUsR0FBRyxDQUFDO0VBQ2I7RUFFQUMsSUFBSUEsQ0FBQ0MsR0FBRyxFQUFFO0lBQ1IsTUFBTUMsT0FBTyxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQyxJQUFJLENBQUNQLEtBQUssR0FBQyxDQUFDLENBQUM7SUFDeEMsTUFBTVEsT0FBTyxHQUFHLElBQUksQ0FBQ1IsS0FBSyxHQUFHLENBQUM7SUFDOUI7SUFDQUksR0FBRyxDQUFDSyxTQUFTLENBQUMsSUFBSSxDQUFDbEIsS0FBSyxFQUNWLEdBQUcsR0FBQ2lCLE9BQU8sRUFBRSxHQUFHLEdBQUNILE9BQU8sRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUNsQyxJQUFJLENBQUNmLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNBLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNRLEtBQUssRUFBRSxJQUFJLENBQUNDLE1BQU0sQ0FBQztJQUMxRSxJQUFJLENBQUNDLEtBQUssSUFBSSxDQUFDO0lBQ2YsSUFBSSxDQUFDSixRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDTSxFQUFFO0lBQzNCLElBQUksQ0FBQ04sUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQ0ssRUFBRTs7SUFFM0I7SUFDQSxJQUFJLElBQUksQ0FBQ0QsS0FBSyxJQUFJLEVBQUUsRUFBRTtNQUNwQixJQUFJLENBQUNVLE1BQU0sRUFBRTtJQUNmO0VBQ0Y7O0VBRUE7RUFDQUEsTUFBTUEsQ0FBQSxFQUFHO0lBQ1AsTUFBTUMsVUFBVSxHQUFHLElBQUksQ0FBQ3ZCLElBQUksQ0FBQ3dCLGdCQUFnQixDQUFDRCxVQUFVO0lBQ3hEQSxVQUFVLENBQUNBLFVBQVUsQ0FBQ0UsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSTtFQUM3QztBQUNGO0FBRUEsK0RBQWUzQixTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvZXhwbG9zaW9uLmpzP2UzNTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1vdmluZ09iamVjdCBmcm9tIFwiLi9tb3Zpbmdfb2JqZWN0XCI7XG5cbmNsYXNzIEV4cGxvc2lvbiBleHRlbmRzIE1vdmluZ09iamVjdCB7XG4gIGNvbnN0cnVjdG9yKGdhbWUsIHNpemUsIHBvc2l0aW9uKSB7XG4gICAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltYWdlLnNyYyA9IFwic3JjL2Fzc2V0cy9leHBsb3Npb24xLnBuZ1wiO1xuXG4gICAgY29uc3QgYXJnc09iaiA9IHtcbiAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbixcbiAgICAgIHZlbG9jaXR5OiBbMCwgMF0sXG4gICAgICBoZWFsdGg6IDAsICAvLyBoZWFsdGggd29uJ3QgbWF0dGVyIGZvciBleHBsb3Npb25cbiAgICAgIGdhbWU6IGdhbWUsXG4gICAgICB3aWR0aDogc2l6ZSxcbiAgICAgIGhlaWdodDogc2l6ZSxcbiAgICAgIGltYWdlOiBpbWFnZVxuICAgIH1cbiAgICBzdXBlcihhcmdzT2JqKTtcblxuICAgIHRoaXMuZnJhbWUgPSAwO1xuICAgIHRoaXMuZHkgPSAxO1xuICAgIHRoaXMuZHggPSAwO1xuICB9XG5cbiAgZHJhdyhjdHgpIHtcbiAgICBjb25zdCB5T2Zmc2V0ID0gTWF0aC5mbG9vcih0aGlzLmZyYW1lLzUpO1xuICAgIGNvbnN0IHhPZmZzZXQgPSB0aGlzLmZyYW1lICUgNTtcbiAgICAvLyBjb25zb2xlLmxvZyh4T2Zmc2V0LCB5T2Zmc2V0KTtcbiAgICBjdHguZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIFxuICAgICAgICAgICAgICAgICAgMTkyKnhPZmZzZXQsIDE5Mip5T2Zmc2V0LCAxOTIsIDE5MiwgXG4gICAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9uWzBdLCB0aGlzLnBvc2l0aW9uWzFdLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG4gICAgdGhpcy5mcmFtZSArPSAxO1xuICAgIHRoaXMudmVsb2NpdHlbMF0gKz0gdGhpcy5keDtcbiAgICB0aGlzLnZlbG9jaXR5WzFdICs9IHRoaXMuZHk7XG5cbiAgICAvLyByZW1vdmUgb25jZSB0aGlzLmZyYW1lID49IDIwXG4gICAgaWYgKHRoaXMuZnJhbWUgPj0gMjApIHtcbiAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgfVxuICB9XG5cbiAgLy8gcmVtb3ZlIG9uY2UgYW5pbWF0aW9uIGZyYW1lIGxpbWl0IHJlYWNoZWRcbiAgcmVtb3ZlKCkge1xuICAgIGNvbnN0IGV4cGxvc2lvbnMgPSB0aGlzLmdhbWUuYWxsTW92aW5nT2JqZWN0cy5leHBsb3Npb25zO1xuICAgIGV4cGxvc2lvbnNbZXhwbG9zaW9ucy5pbmRleE9mKHRoaXMpXSA9IG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXhwbG9zaW9uOyJdLCJuYW1lcyI6WyJNb3ZpbmdPYmplY3QiLCJFeHBsb3Npb24iLCJjb25zdHJ1Y3RvciIsImdhbWUiLCJzaXplIiwicG9zaXRpb24iLCJpbWFnZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyYyIsImFyZ3NPYmoiLCJ2ZWxvY2l0eSIsImhlYWx0aCIsIndpZHRoIiwiaGVpZ2h0IiwiZnJhbWUiLCJkeSIsImR4IiwiZHJhdyIsImN0eCIsInlPZmZzZXQiLCJNYXRoIiwiZmxvb3IiLCJ4T2Zmc2V0IiwiZHJhd0ltYWdlIiwicmVtb3ZlIiwiZXhwbG9zaW9ucyIsImFsbE1vdmluZ09iamVjdHMiLCJpbmRleE9mIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/explosion.js\n");

/***/ }),

/***/ "./src/scripts/explosion2.js":
/*!***********************************!*\
  !*** ./src/scripts/explosion2.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n\nclass Explosion2 extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game, size, position) {\n    const image = document.createElement(\"img\");\n    image.src = \"src/assets/explosion2.png\";\n    const argsObj = {\n      position: position,\n      velocity: [0, 0],\n      health: 0,\n      // health won't matter for explosion\n      game: game,\n      width: size,\n      height: size,\n      image: image\n    };\n    super(argsObj);\n    this.frame = 0;\n    this.dx = 0;\n    this.dy = 1;\n  }\n  draw(ctx) {\n    const yOffset = Math.floor(this.frame / 8);\n    const xOffset = this.frame % 8;\n    // console.log(xOffset, yOffset);\n    ctx.drawImage(this.image, 240 * xOffset, 240 * yOffset, 240, 240, this.position[0], this.position[1], this.width, this.height);\n    this.frame += 1;\n    this.velocity[0] += this.dx;\n    this.velocity[1] += this.dy;\n\n    // remove once this.frame >= 20\n    if (this.frame >= 48) {\n      this.remove();\n    }\n  }\n\n  // remove once animation frame limit reached\n  remove() {\n    const explosions = this.game.allMovingObjects.explosions;\n    explosions[explosions.indexOf(this)] = null;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Explosion2);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9leHBsb3Npb24yLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQTJDO0FBRTNDLE1BQU1DLFVBQVUsU0FBU0Qsc0RBQVksQ0FBQztFQUNwQ0UsV0FBV0EsQ0FBQ0MsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRTtJQUNoQyxNQUFNQyxLQUFLLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLEtBQUssQ0FBQztJQUMzQ0YsS0FBSyxDQUFDRyxHQUFHLEdBQUcsMkJBQTJCO0lBRXZDLE1BQU1DLE9BQU8sR0FBRztNQUNkTCxRQUFRLEVBQUVBLFFBQVE7TUFDbEJNLFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7TUFDaEJDLE1BQU0sRUFBRSxDQUFDO01BQUc7TUFDWlQsSUFBSSxFQUFFQSxJQUFJO01BQ1ZVLEtBQUssRUFBRVQsSUFBSTtNQUNYVSxNQUFNLEVBQUVWLElBQUk7TUFDWkUsS0FBSyxFQUFFQTtJQUNULENBQUM7SUFDRCxLQUFLLENBQUNJLE9BQU8sQ0FBQztJQUVkLElBQUksQ0FBQ0ssS0FBSyxHQUFHLENBQUM7SUFDZCxJQUFJLENBQUNDLEVBQUUsR0FBRyxDQUFDO0lBQ1gsSUFBSSxDQUFDQyxFQUFFLEdBQUcsQ0FBQztFQUNiO0VBRUFDLElBQUlBLENBQUNDLEdBQUcsRUFBRTtJQUNSLE1BQU1DLE9BQU8sR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDUCxLQUFLLEdBQUMsQ0FBQyxDQUFDO0lBQ3hDLE1BQU1RLE9BQU8sR0FBRyxJQUFJLENBQUNSLEtBQUssR0FBRyxDQUFDO0lBQzlCO0lBQ0FJLEdBQUcsQ0FBQ0ssU0FBUyxDQUFDLElBQUksQ0FBQ2xCLEtBQUssRUFDVixHQUFHLEdBQUNpQixPQUFPLEVBQUUsR0FBRyxHQUFDSCxPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFDbEMsSUFBSSxDQUFDZixRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDQSxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDUSxLQUFLLEVBQUUsSUFBSSxDQUFDQyxNQUFNLENBQUM7SUFDMUUsSUFBSSxDQUFDQyxLQUFLLElBQUksQ0FBQztJQUNmLElBQUksQ0FBQ0osUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQ0ssRUFBRTtJQUMzQixJQUFJLENBQUNMLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUNNLEVBQUU7O0lBRTNCO0lBQ0EsSUFBSSxJQUFJLENBQUNGLEtBQUssSUFBSSxFQUFFLEVBQUU7TUFDcEIsSUFBSSxDQUFDVSxNQUFNLEVBQUU7SUFDZjtFQUNGOztFQUVBO0VBQ0FBLE1BQU1BLENBQUEsRUFBRztJQUNQLE1BQU1DLFVBQVUsR0FBRyxJQUFJLENBQUN2QixJQUFJLENBQUN3QixnQkFBZ0IsQ0FBQ0QsVUFBVTtJQUN4REEsVUFBVSxDQUFDQSxVQUFVLENBQUNFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUk7RUFDN0M7QUFDRjtBQUVBLCtEQUFlM0IsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL2V4cGxvc2lvbjIuanM/ZDNhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW92aW5nT2JqZWN0IGZyb20gXCIuL21vdmluZ19vYmplY3RcIjtcblxuY2xhc3MgRXhwbG9zaW9uMiBleHRlbmRzIE1vdmluZ09iamVjdCB7XG4gIGNvbnN0cnVjdG9yKGdhbWUsIHNpemUsIHBvc2l0aW9uKSB7XG4gICAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltYWdlLnNyYyA9IFwic3JjL2Fzc2V0cy9leHBsb3Npb24yLnBuZ1wiO1xuXG4gICAgY29uc3QgYXJnc09iaiA9IHtcbiAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbixcbiAgICAgIHZlbG9jaXR5OiBbMCwgMF0sXG4gICAgICBoZWFsdGg6IDAsICAvLyBoZWFsdGggd29uJ3QgbWF0dGVyIGZvciBleHBsb3Npb25cbiAgICAgIGdhbWU6IGdhbWUsXG4gICAgICB3aWR0aDogc2l6ZSxcbiAgICAgIGhlaWdodDogc2l6ZSxcbiAgICAgIGltYWdlOiBpbWFnZVxuICAgIH1cbiAgICBzdXBlcihhcmdzT2JqKTtcblxuICAgIHRoaXMuZnJhbWUgPSAwO1xuICAgIHRoaXMuZHggPSAwO1xuICAgIHRoaXMuZHkgPSAxO1xuICB9XG5cbiAgZHJhdyhjdHgpIHtcbiAgICBjb25zdCB5T2Zmc2V0ID0gTWF0aC5mbG9vcih0aGlzLmZyYW1lLzgpO1xuICAgIGNvbnN0IHhPZmZzZXQgPSB0aGlzLmZyYW1lICUgODtcbiAgICAvLyBjb25zb2xlLmxvZyh4T2Zmc2V0LCB5T2Zmc2V0KTtcbiAgICBjdHguZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIFxuICAgICAgICAgICAgICAgICAgMjQwKnhPZmZzZXQsIDI0MCp5T2Zmc2V0LCAyNDAsIDI0MCwgXG4gICAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9uWzBdLCB0aGlzLnBvc2l0aW9uWzFdLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG4gICAgdGhpcy5mcmFtZSArPSAxO1xuICAgIHRoaXMudmVsb2NpdHlbMF0gKz0gdGhpcy5keDtcbiAgICB0aGlzLnZlbG9jaXR5WzFdICs9IHRoaXMuZHk7XG5cbiAgICAvLyByZW1vdmUgb25jZSB0aGlzLmZyYW1lID49IDIwXG4gICAgaWYgKHRoaXMuZnJhbWUgPj0gNDgpIHtcbiAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgfVxuICB9XG5cbiAgLy8gcmVtb3ZlIG9uY2UgYW5pbWF0aW9uIGZyYW1lIGxpbWl0IHJlYWNoZWRcbiAgcmVtb3ZlKCkge1xuICAgIGNvbnN0IGV4cGxvc2lvbnMgPSB0aGlzLmdhbWUuYWxsTW92aW5nT2JqZWN0cy5leHBsb3Npb25zO1xuICAgIGV4cGxvc2lvbnNbZXhwbG9zaW9ucy5pbmRleE9mKHRoaXMpXSA9IG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXhwbG9zaW9uMjsiXSwibmFtZXMiOlsiTW92aW5nT2JqZWN0IiwiRXhwbG9zaW9uMiIsImNvbnN0cnVjdG9yIiwiZ2FtZSIsInNpemUiLCJwb3NpdGlvbiIsImltYWdlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiYXJnc09iaiIsInZlbG9jaXR5IiwiaGVhbHRoIiwid2lkdGgiLCJoZWlnaHQiLCJmcmFtZSIsImR4IiwiZHkiLCJkcmF3IiwiY3R4IiwieU9mZnNldCIsIk1hdGgiLCJmbG9vciIsInhPZmZzZXQiLCJkcmF3SW1hZ2UiLCJyZW1vdmUiLCJleHBsb3Npb25zIiwiYWxsTW92aW5nT2JqZWN0cyIsImluZGV4T2YiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/explosion2.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _player_ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player_ship */ \"./src/scripts/player_ship.js\");\n/* harmony import */ var _enemy_ship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enemy_ship */ \"./src/scripts/enemy_ship.js\");\n/* harmony import */ var _boss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boss */ \"./src/scripts/boss.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\nclass Game {\n  constructor(canvas) {\n    this.canvasWidth = canvas.width;\n    this.canvasHeight = canvas.height;\n    this.messageDrawn = false;\n    // this.enemyWave = 0;\n    this.enemyWave = 5;\n    this.addEnemyOnCooldown = true;\n    this.addedEnemies = 0;\n    this.enemiesRemaining = 0;\n    this.enemyWaveCount = 0;\n    this.score = 0;\n    this.gameOver = false;\n    this.win = false;\n    this.startScreen = true;\n    this.player = new _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    this.allMovingObjects = {\n      player: this.player,\n      enemies: [],\n      projectiles: [],\n      particles: [],\n      explosions: []\n    };\n    const bossInfo = document.getElementById(\"boss-info\");\n    bossInfo.style.display = 'none';\n    this.bossFight = false;\n    const backgroundImg = new Image();\n    backgroundImg.src = \"src/assets/game_background.png\";\n    this.backgroundOptions = {\n      img: backgroundImg,\n      scale: 550 / backgroundImg.height,\n      x: 0,\n      y: 0,\n      dy: .75\n    };\n  }\n  step(timeDelta) {\n    this.clearNulls();\n    this.checkCollisions();\n    this.updateInformation();\n    this.setEnemies();\n    this.moveObjects(timeDelta);\n  }\n  clearNulls() {\n    for (let key in this.allMovingObjects) {\n      const objectsValue = this.allMovingObjects[key];\n      if (objectsValue instanceof Array) {\n        const filtered = objectsValue.filter(el => el);\n        this.allMovingObjects[key] = filtered;\n      }\n    }\n  }\n  moveObjects(timeDelta) {\n    for (let key in this.allMovingObjects) {\n      const objectsValue = this.allMovingObjects[key];\n      if (objectsValue instanceof Array) {\n        objectsValue.forEach(obj => {\n          if (obj) obj.move(timeDelta);\n        });\n      } else {\n        if (objectsValue) objectsValue.move(timeDelta);\n      }\n    }\n  }\n  checkCollisions() {\n    // check projectile collisions\n    // check projectile hitbox vs enemy hitboxes\n    this.allMovingObjects.projectiles.forEach(projectile => {\n      if (projectile) {\n        if (projectile.origin === \"player\") {\n          this.allMovingObjects.enemies.forEach(enemy => {\n            if (enemy) enemy.collideCheck(projectile);\n          });\n        } else {\n          if (this.player) this.player.collideCheck(projectile);\n        }\n      }\n    });\n\n    // check enemy to player collisions\n    // check player hitbox vs enemy hitboxes\n    this.allMovingObjects.enemies.forEach(enemy => {\n      if (enemy && this.player) this.player.collideCheck(enemy);\n    });\n  }\n  draw(ctx) {\n    ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n    this.drawBackground(ctx);\n    for (let key in this.allMovingObjects) {\n      const objectsValue = this.allMovingObjects[key];\n      if (objectsValue instanceof Array) {\n        objectsValue.forEach(obj => {\n          if (obj) obj.draw(ctx);\n        });\n      } else {\n        if (objectsValue) objectsValue.draw(ctx);\n      }\n    }\n  }\n  drawBackground(ctx) {\n    const img = this.backgroundOptions.img;\n    const scale = this.backgroundOptions.scale;\n    let imgW = img.width;\n    let imgH = img.height;\n    const x = this.backgroundOptions.x;\n    if (imgH * scale > this.canvasHeight) this.backgroundOptions.y = this.canvasHeight - imgH;\n    if (imgH * scale <= this.canvasHeight) {\n      if (this.backgroundOptions.y > this.canvasHeight) this.backgroundOptions.y = -imgH + this.backgroundOptions.y;\n      if (this.backgroundOptions.y > 0) ctx.drawImage(img, x, -imgH + this.backgroundOptions.y, imgW, imgH);\n      if (this.backgroundOptions.y - imgH > 0) ctx.drawImage(img, x, -imgH * 2 + this.backgroundOptions.y, imgW, imgH);\n    } else {\n      if (this.backgroundOptions.y > this.canvasHeight) this.backgroundOptions.y = this.canvasHeight - imgH;\n      if (this.backgroundOptions.y > this.canvasHeight - imgH) ctx.drawImage(img, x, this.backgroundOptions.y - imgH + 1, imgW, imgH);\n    }\n    ctx.drawImage(img, x, this.backgroundOptions.y, imgW, imgH);\n    this.backgroundOptions.y += this.backgroundOptions.dy;\n  }\n  updateInformation() {\n    // update score here later\n    this.updateScore();\n    this.updateHealthBar('player');\n    if (this.bossFight) {\n      this.updateHealthBar('boss');\n    } else {\n      const waveSpan = document.getElementById(\"wave-number\");\n      waveSpan.innerText = this.enemyWave;\n      const enemiesRemainingSpan = document.getElementById(\"enemies-remaining\");\n      enemiesRemainingSpan.innerText = this.enemiesRemaining;\n    }\n  }\n  updateScore() {\n    const scoreSpan = document.getElementById(\"score\");\n    scoreSpan.innerText = this.score;\n  }\n  updateHealthBar(type) {\n    const obj = type === 'player' ? this.player : this.boss;\n    const healthBar = document.getElementById(`${type}-health-bar`);\n    const healthPoint = document.createElement(\"li\");\n    healthPoint.setAttribute(\"class\", `${type}-health-point`);\n    let health = obj.health;\n    if (type === 'boss') health = Math.ceil(health / 2);\n    if (healthBar.children.length < health) {\n      for (let i = 0; i < health - healthBar.children.length; i++) {\n        healthBar.appendChild(healthPoint);\n      }\n    } else if (healthBar.children.length > health) {\n      for (let i = 0; i < healthBar.children.length - health; i++) {\n        const lastChild = healthBar.lastChild;\n        if (lastChild) healthBar.removeChild(healthBar.lastChild);\n      }\n    }\n  }\n  healPlayer() {\n    if (this.allMovingObjects.player && !this.player.disabled) {\n      const newHealth = this.player.health + 3;\n      this.player.health = newHealth > 10 ? 10 : newHealth;\n    }\n  }\n  setEnemies() {\n    if (this.enemiesRemaining === 0) {\n      if (this.enemyWave < Game.MAX_ENEMY_WAVE) {\n        this.enemyWave += 1;\n        this.enemyWaveCount = this.enemyWave * 5;\n        this.enemiesRemaining = this.enemyWaveCount;\n        this.addedEnemies = 0;\n        this.healPlayer();\n      } else if (!this.bossFight) {\n        this.setBoss();\n      }\n    }\n    if (!this.bossfight && !this.addEnemyOnCooldown) {\n      const remaining = this.enemyWaveCount - this.addedEnemies;\n      let numNewEnemies;\n      if (remaining < 10) {\n        numNewEnemies = remaining;\n      } else {\n        numNewEnemies = Math.floor(Math.random() * (10 - 3) + 3);\n      }\n      this.addedEnemies += numNewEnemies;\n      for (let i = 0; i < numNewEnemies; i++) {\n        // might change to increment difficulty per wave\n        const randPosX = Math.floor(Math.random() * this.canvasWidth);\n        // const randSpeed = Math.floor(Math.random() * (5 - 2) + 2);\n        const randSpeed = Math.random() * (5 - 2) + 2;\n        const randCooldown = Math.floor(Math.random() * (1000 - 450) + 450);\n        const newEnemy = new _enemy_ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, randPosX, randSpeed, randCooldown);\n        this.allMovingObjects.enemies.push(newEnemy);\n      }\n      this.addEnemyOnCooldown = true;\n      const randTimeOut = Math.random() * (3000 - 1000) + 1000;\n      setTimeout(this.resetAddEnemyCooldown.bind(this), randTimeOut);\n    }\n  }\n  resetAddEnemyCooldown() {\n    this.addEnemyOnCooldown = false;\n  }\n  setBoss() {\n    this.player.disabled = true;\n    if (this.allMovingObjects.projectiles.length === 0) {\n      this.boss = new _boss__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n      this.switchGameInformation();\n      this.allMovingObjects.enemies.push(this.boss);\n      this.bossFight = true;\n    }\n  }\n  switchGameInformation() {\n    const bossInfo = document.getElementById(\"boss-info\");\n    const waveInfo = document.getElementById(\"wave-info\");\n    waveInfo.style.display = 'none';\n    bossInfo.style.display = 'flex';\n  }\n  setWin() {\n    this.player.removeControlHandlers();\n    this.score *= this.player.health;\n    this.updateScore();\n    this.win = true;\n  }\n  setGameOver() {\n    this.player.removeControlHandlers();\n    this.gameOver = true;\n  }\n  drawStartWinGameOver(ctx) {\n    const message = this.startScreen ? \"Press any key to start\" : this.gameOver ? \"GAME OVER\" : \"YOU WIN\";\n    if (!this.messageDrawn) {\n      ctx.font = \"48px roboto\";\n      ctx.textAlign = \"center\";\n      ctx.fillStyle = \"white\";\n      ctx.fillText(message, this.canvasWidth / 2, this.canvasHeight / 2);\n      this.messageDrawn = true;\n      if (this.gameOver || this.win) setTimeout(this.drawRetryKey.bind(this, ctx), 1000);\n    }\n  }\n  drawRetryKey(ctx) {\n    ctx.font = \"24px roboto\";\n    ctx.fillText(\"(press any key to retry)\", this.canvasWidth / 2, this.canvasHeight / 2 + 50);\n    this.bindRetryHandler();\n  }\n  bindStartHandler() {\n    this.startHandler = this.handleStartKey.bind(this);\n    document.addEventListener(\"keypress\", this.startHandler);\n  }\n  handleStartKey(event) {\n    event.preventDefault();\n    if (event.key) {\n      this.startScreen = false;\n      document.removeEventListener(\"keypress\", this.startHandler);\n      this.player.bindControlHandlers();\n      setTimeout(this.resetAddEnemyCooldown.bind(this), 1500);\n      this.messageDrawn = false;\n    }\n  }\n  bindRetryHandler() {\n    this.retryHandler = this.handleRetryKey.bind(this);\n    document.addEventListener(\"keypress\", this.retryHandler);\n  }\n  handleRetryKey(event) {\n    event.preventDefault();\n    if (event.key) {\n      document.removeEventListener(\"keypress\", this.retryHandler);\n      this.reset();\n      this.player.bindControlHandlers();\n      setTimeout(this.resetAddEnemyCooldown.bind(this), 1500);\n      this.messageDrawn = false;\n    }\n  }\n  reset() {\n    this.messageDrawn = false;\n    this.enemyWave = 0;\n    this.addEnemyOnCooldown = true;\n    this.addedEnemies = 0;\n    this.enemiesRemaining = 0;\n    this.enemyWaveCount = 0;\n    this.score = 0;\n    this.gameOver = false;\n    this.win = false;\n    this.startScreen = false;\n    this.player = new _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    this.allMovingObjects = {\n      player: this.player,\n      enemies: [],\n      projectiles: [],\n      particles: [],\n      explosions: []\n    };\n    const bossInfo = document.getElementById(\"boss-info\");\n    bossInfo.style.display = \"none\";\n    this.bossFight = false;\n    const waveInfo = document.getElementById(\"wave-info\");\n    waveInfo.style.display = \"flex\";\n  }\n}\n_defineProperty(Game, \"MAX_ENEMY_WAVE\", 5);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/game_view.js":
/*!**********************************!*\
  !*** ./src/scripts/game_view.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n\nclass GameView {\n  constructor(canvas, ctx) {\n    this.ctx = ctx;\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas);\n    this.game.bindStartHandler();\n    this.start();\n  }\n  start() {\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  animate(time) {\n    if (this.game.startScreen || this.game.gameOver || this.game.win) {\n      this.game.drawStartWinGameOver(this.ctx);\n    } else {\n      const timeDelta = time - this.lastTime;\n      this.game.step(timeDelta);\n      this.game.draw(this.ctx);\n    }\n    this.lastTime = time;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lX3ZpZXcuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBMEI7QUFFMUIsTUFBTUMsUUFBUSxDQUFDO0VBQ2JDLFdBQVdBLENBQUNDLE1BQU0sRUFBRUMsR0FBRyxFQUFFO0lBQ3ZCLElBQUksQ0FBQ0EsR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDQyxJQUFJLEdBQUcsSUFBSUwsNkNBQUksQ0FBQ0csTUFBTSxDQUFDO0lBQzVCLElBQUksQ0FBQ0UsSUFBSSxDQUFDQyxnQkFBZ0IsRUFBRTtJQUM1QixJQUFJLENBQUNDLEtBQUssRUFBRTtFQUNkO0VBRUFBLEtBQUtBLENBQUEsRUFBRztJQUNOLElBQUksQ0FBQ0MsUUFBUSxHQUFHLENBQUM7SUFDakJDLHFCQUFxQixDQUFDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDaEQ7RUFFQUQsT0FBT0EsQ0FBQ0UsSUFBSSxFQUFFO0lBQ1osSUFBSSxJQUFJLENBQUNQLElBQUksQ0FBQ1EsV0FBVyxJQUFJLElBQUksQ0FBQ1IsSUFBSSxDQUFDUyxRQUFRLElBQUksSUFBSSxDQUFDVCxJQUFJLENBQUNVLEdBQUcsRUFBRTtNQUNoRSxJQUFJLENBQUNWLElBQUksQ0FBQ1csb0JBQW9CLENBQUMsSUFBSSxDQUFDWixHQUFHLENBQUM7SUFDMUMsQ0FBQyxNQUFNO01BQ0wsTUFBTWEsU0FBUyxHQUFHTCxJQUFJLEdBQUcsSUFBSSxDQUFDSixRQUFRO01BQ3RDLElBQUksQ0FBQ0gsSUFBSSxDQUFDYSxJQUFJLENBQUNELFNBQVMsQ0FBQztNQUN6QixJQUFJLENBQUNaLElBQUksQ0FBQ2MsSUFBSSxDQUFDLElBQUksQ0FBQ2YsR0FBRyxDQUFDO0lBQzFCO0lBRUEsSUFBSSxDQUFDSSxRQUFRLEdBQUdJLElBQUk7SUFDcEJILHFCQUFxQixDQUFDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDaEQ7QUFDRjtBQUVBLCtEQUFlVixRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvZ2FtZV92aWV3LmpzPzgwZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWUgZnJvbSBcIi4vZ2FtZVwiO1xuXG5jbGFzcyBHYW1lVmlldyB7XG4gIGNvbnN0cnVjdG9yKGNhbnZhcywgY3R4KSB7XG4gICAgdGhpcy5jdHggPSBjdHg7XG4gICAgdGhpcy5nYW1lID0gbmV3IEdhbWUoY2FudmFzKTtcbiAgICB0aGlzLmdhbWUuYmluZFN0YXJ0SGFuZGxlcigpO1xuICAgIHRoaXMuc3RhcnQoKTtcbiAgfVxuXG4gIHN0YXJ0KCkge1xuICAgIHRoaXMubGFzdFRpbWUgPSAwO1xuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUuYmluZCh0aGlzKSk7XG4gIH1cblxuICBhbmltYXRlKHRpbWUpIHtcbiAgICBpZiAodGhpcy5nYW1lLnN0YXJ0U2NyZWVuIHx8IHRoaXMuZ2FtZS5nYW1lT3ZlciB8fCB0aGlzLmdhbWUud2luKSB7XG4gICAgICB0aGlzLmdhbWUuZHJhd1N0YXJ0V2luR2FtZU92ZXIodGhpcy5jdHgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB0aW1lRGVsdGEgPSB0aW1lIC0gdGhpcy5sYXN0VGltZTtcbiAgICAgIHRoaXMuZ2FtZS5zdGVwKHRpbWVEZWx0YSk7XG4gICAgICB0aGlzLmdhbWUuZHJhdyh0aGlzLmN0eCk7XG4gICAgfVxuXG4gICAgdGhpcy5sYXN0VGltZSA9IHRpbWU7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0ZS5iaW5kKHRoaXMpKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBHYW1lVmlldzsiXSwibmFtZXMiOlsiR2FtZSIsIkdhbWVWaWV3IiwiY29uc3RydWN0b3IiLCJjYW52YXMiLCJjdHgiLCJnYW1lIiwiYmluZFN0YXJ0SGFuZGxlciIsInN0YXJ0IiwibGFzdFRpbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJhbmltYXRlIiwiYmluZCIsInRpbWUiLCJzdGFydFNjcmVlbiIsImdhbWVPdmVyIiwid2luIiwiZHJhd1N0YXJ0V2luR2FtZU92ZXIiLCJ0aW1lRGVsdGEiLCJzdGVwIiwiZHJhdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/game_view.js\n");

/***/ }),

/***/ "./src/scripts/moving_object.js":
/*!**************************************!*\
  !*** ./src/scripts/moving_object.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass MovingObject {\n  constructor(argsObject) {\n    this.position = argsObject[\"position\"];\n    this.velocity = argsObject[\"velocity\"];\n    this.health = argsObject[\"health\"];\n    this.game = argsObject[\"game\"];\n    this.width = argsObject[\"width\"];\n    this.height = argsObject[\"height\"];\n    this.image = argsObject[\"image\"];\n  }\n  draw(ctx) {\n    ctx.drawImage(this.image, this.position[0], this.position[1], this.width, this.height);\n  }\n  collideCheck(otherObj) {\n    const thisHitboxes = this.getHitbox();\n    const otherHitboxes = otherObj.getHitbox();\n    const found = thisHitboxes.some(thisBox => {\n      return otherHitboxes.some(otherBox => {\n        return this.rectangleCollision(thisBox, otherBox);\n      });\n    });\n    if (found) {\n      this.handleCollided(otherObj);\n    }\n  }\n  handleCollided(otherObj) {\n    // two case: enemy/player to projectile, player to enemy\n    const otherObjClass = otherObj.constructor.name;\n    if (otherObjClass === \"Projectile\") {\n      const damage = otherObj.health;\n      otherObj.remove();\n      this.damageTaken(damage);\n    } else if (otherObjClass === \"EnemyShip\") {\n      // take 1 damage if collided with enemy\n      const damage = 1;\n      this.damageTaken(damage);\n    } else if (otherObjClass === \"Boss\") {\n      // take more damage if collided with boss\n      const damage = 2;\n      this.damageTaken(damage);\n    }\n  }\n  rectangleCollision(box1, box2) {\n    return box1.x < box2.x + box2.width && box1.x + box1.width > box2.x && box1.y < box2.y + box2.height && box1.height + box1.y > box2.y;\n  }\n  getHitbox() {\n    // to be overwritten for complex boss shapes (multiple x,y,width,height);\n    // return an array of hitboxes\n    const [x, y] = this.position;\n    const width = this.width;\n    const height = this.height;\n    return [{\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }];\n  }\n\n  // to be refactored for DRY code later\n  move(timeDelta) {\n    const velocityScale = timeDelta / MovingObject.NORMAL_FRAME_TIME_DELTA;\n    const offsetX = this.velocity[0] * velocityScale;\n    const offsetY = this.velocity[1] * velocityScale;\n    const newX = this.position[0] + offsetX;\n    const newY = this.position[1] + offsetY;\n    if (this.inXBounds(newX)) this.position[0] = newX;\n    if (this.inYBounds(newY)) this.position[1] = newY;\n  }\n  inXBounds(x) {\n    return x > 0 && x < this.game.canvasWidth - this.width;\n  }\n  inYBounds(y) {\n    return y > 0 && y < this.game.canvasHeight - this.height;\n  }\n  inBounds(position) {\n    return this.inXBounds(position[0]) && this.inYBounds(position[1]);\n  }\n}\n_defineProperty(MovingObject, \"NORMAL_FRAME_TIME_DELTA\", 1000 / 60);\n/* harmony default export */ __webpack_exports__[\"default\"] = (MovingObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/moving_object.js\n");

/***/ }),

/***/ "./src/scripts/player_ship.js":
/*!************************************!*\
  !*** ./src/scripts/player_ship.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _explosion2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./explosion2 */ \"./src/scripts/explosion2.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nclass PlayerShip extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game) {\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/player1.png\";\n    let height = 48;\n    let width = 37;\n    let health = 10;\n    // let health = -2;\n\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [Math.floor(game.canvasWidth / 2), game.canvasHeight - height],\n      velocity: [0, 0],\n      health: health,\n      game: game,\n      image: image\n    };\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/player_projectile.png\";\n    const projectileArgs = {\n      objArgs: {\n        velocity: [0, -10],\n        health: 1,\n        game: game,\n        width: 5,\n        height: 20,\n        image: image\n      },\n      origin: \"player\",\n      cooldown: 250,\n      xAdjustment: .3,\n      yAdjustment: 0\n    };\n    super(objArgs, projectileArgs);\n    this.keysPressed = {\n      up: false,\n      down: false,\n      left: false,\n      right: false,\n      shoot: false\n    };\n    this.disabled = false;\n    this.invincible = false;\n  }\n  getHitbox() {\n    const box1 = {\n      x: this.position[0] + this.width / 3,\n      y: this.position[1],\n      width: this.width / 3,\n      height: this.height\n    };\n    const box2 = {\n      x: this.position[0],\n      y: this.position[1] + this.height * .65,\n      width: this.width,\n      height: this.height / 5\n    };\n    return [box1, box2];\n  }\n  updateVelocity() {\n    const newVelocity = [0, 0];\n    if (this.disabled) {\n      newVelocity[1] = 2;\n    } else {\n      if (this.keysPressed.right) newVelocity[0] += PlayerShip.SPEED;\n      if (this.keysPressed.left) newVelocity[0] -= PlayerShip.SPEED;\n      if (this.keysPressed.up) newVelocity[1] -= PlayerShip.SPEED;\n      if (this.keysPressed.down) newVelocity[1] += PlayerShip.SPEED;\n    }\n    this.velocity = newVelocity;\n  }\n  move(timeDelta) {\n    this.updateVelocity();\n    if (this.keysPressed.shoot && !this.shootOnCooldown && !this.disabled) {\n      this.shootProjectile();\n    }\n    super.move(timeDelta);\n  }\n  handleKeyDown(event) {\n    event.preventDefault();\n    if (PlayerShip.RIGHT_KEYS.includes(event.key)) this.keysPressed.right = true;else if (PlayerShip.LEFT_KEYS.includes(event.key)) this.keysPressed.left = true;else if (PlayerShip.UP_KEYS.includes(event.key)) this.keysPressed.up = true;else if (PlayerShip.DOWN_KEYS.includes(event.key)) this.keysPressed.down = true;else if (event.key === \" \") this.keysPressed.shoot = true;\n  }\n  handleKeyUp(event) {\n    if (event.key === \" \") event.preventDefault();\n    if (PlayerShip.RIGHT_KEYS.includes(event.key)) this.keysPressed.right = false;else if (PlayerShip.LEFT_KEYS.includes(event.key)) this.keysPressed.left = false;else if (PlayerShip.UP_KEYS.includes(event.key)) this.keysPressed.up = false;else if (PlayerShip.DOWN_KEYS.includes(event.key)) this.keysPressed.down = false;else if (event.key === \" \") this.keysPressed.shoot = false;\n  }\n  handleMouseDown(event) {\n    this.keysPressed.shoot = true;\n  }\n  handleMouseUp(event) {\n    this.keysPressed.shoot = false;\n  }\n  bindControlHandlers() {\n    this.keyDownHandler = this.handleKeyDown.bind(this);\n    this.keyUpHandler = this.handleKeyUp.bind(this);\n    this.mouseDownHandler = this.handleMouseDown.bind(this);\n    this.mouseUpHandler = this.handleMouseUp.bind(this);\n    document.addEventListener(\"keydown\", this.keyDownHandler);\n    document.addEventListener(\"keyup\", this.keyUpHandler);\n    document.addEventListener(\"mousedown\", this.mouseDownHandler);\n    document.addEventListener(\"mouseup\", this.mouseUpHandler);\n  }\n  removeControlHandlers() {\n    document.removeEventListener(\"keydown\", this.keyDownHandler);\n    document.removeEventListener(\"keyup\", this.keyUpHandler);\n    document.removeEventListener(\"mousedown\", this.mouseDownHandler);\n    document.removeEventListener(\"mouseup\", this.mouseUpHandler);\n  }\n  damageTaken(damage) {\n    if (!this.invincible) {\n      super.damageTaken(damage);\n      this.invincible = true;\n      setTimeout(this.resetInvincibility.bind(this), 1000);\n    }\n    if (this.health <= 0 && !this.disabled) {\n      // add explosion with 0 velocity here\n      this.disabled = true;\n      setTimeout(() => {\n        this.remove();\n        try {\n          const posX = this.position[0] - 40;\n          const posY = this.position[1] - 20;\n          const finalExplosion = new _explosion2__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 100, [posX, posY]);\n          finalExplosion.dy = 0;\n          this.game.allMovingObjects.explosions.push(finalExplosion);\n        } catch (error) {\n          // console.error();\n          // console.log(this.game);\n        }\n        setTimeout(this.game.setGameOver.bind(this.game), 2000);\n      }, 1000);\n\n      // put remove and setGameOver on setTimeout\n      // this.remove();\n      // this.game.setGameOver();\n    }\n  }\n\n  resetInvincibility() {\n    this.invincible = false;\n  }\n  remove() {\n    this.game.allMovingObjects.player = null;\n  }\n}\n_defineProperty(PlayerShip, \"SPEED\", 5);\n_defineProperty(PlayerShip, \"UP_KEYS\", [\"ArrowUp\", 'w']);\n_defineProperty(PlayerShip, \"DOWN_KEYS\", [\"ArrowDown\", 's']);\n_defineProperty(PlayerShip, \"RIGHT_KEYS\", [\"ArrowRight\", 'd']);\n_defineProperty(PlayerShip, \"LEFT_KEYS\", [\"ArrowLeft\", 'a']);\n_defineProperty(PlayerShip, \"MAX_HEALTH\", 10);\n/* harmony default export */ __webpack_exports__[\"default\"] = (PlayerShip);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player_ship.js\n");

/***/ }),

/***/ "./src/scripts/projectile.js":
/*!***********************************!*\
  !*** ./src/scripts/projectile.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n\nclass Projectile extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(args) {\n    super(args.objArgs);\n    this.origin = args.origin;\n  }\n  move(timeDelta) {\n    const velocityScale = timeDelta / _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"].NORMAL_FRAME_TIME_DELTA;\n    const offsetX = this.velocity[0] * velocityScale;\n    const offsetY = this.velocity[1] * velocityScale;\n    const newPos = this.position;\n    newPos[0] += offsetX;\n    newPos[1] += offsetY;\n    if (!this.inBounds(newPos)) {\n      this.remove();\n    } else {\n      this.position = newPos;\n    }\n  }\n  inBounds(position) {\n    const [x, y] = position;\n    return x > -this.width && x < this.game.canvasWidth + this.width && y > -this.height && y < this.game.canvasHeight + this.height;\n  }\n  remove() {\n    const projectiles = this.game.allMovingObjects.projectiles;\n    projectiles[projectiles.indexOf(this)] = null;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Projectile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wcm9qZWN0aWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQTJDO0FBRTNDLE1BQU1DLFVBQVUsU0FBU0Qsc0RBQVksQ0FBQztFQUNwQ0UsV0FBV0EsQ0FBQ0MsSUFBSSxFQUFFO0lBQ2hCLEtBQUssQ0FBQ0EsSUFBSSxDQUFDQyxPQUFPLENBQUM7SUFDbkIsSUFBSSxDQUFDQyxNQUFNLEdBQUdGLElBQUksQ0FBQ0UsTUFBTTtFQUMzQjtFQUVBQyxJQUFJQSxDQUFDQyxTQUFTLEVBQUU7SUFDZCxNQUFNQyxhQUFhLEdBQUdELFNBQVMsR0FBR1AsOEVBQW9DO0lBQ3RFLE1BQU1VLE9BQU8sR0FBRyxJQUFJLENBQUNDLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBR0gsYUFBYTtJQUNoRCxNQUFNSSxPQUFPLEdBQUcsSUFBSSxDQUFDRCxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUdILGFBQWE7SUFFaEQsTUFBTUssTUFBTSxHQUFHLElBQUksQ0FBQ0MsUUFBUTtJQUM1QkQsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJSCxPQUFPO0lBQ3BCRyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUlELE9BQU87SUFFcEIsSUFBSSxDQUFDLElBQUksQ0FBQ0csUUFBUSxDQUFDRixNQUFNLENBQUMsRUFBRTtNQUMxQixJQUFJLENBQUNHLE1BQU0sRUFBRTtJQUNmLENBQUMsTUFBTTtNQUNMLElBQUksQ0FBQ0YsUUFBUSxHQUFHRCxNQUFNO0lBQ3hCO0VBQ0Y7RUFFQUUsUUFBUUEsQ0FBQ0QsUUFBUSxFQUFFO0lBQ2pCLE1BQU0sQ0FBQ0csQ0FBQyxFQUFFQyxDQUFDLENBQUMsR0FBR0osUUFBUTtJQUN2QixPQUFRRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUNFLEtBQUssSUFDbEJGLENBQUMsR0FBRyxJQUFJLENBQUNHLElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUksQ0FBQ0YsS0FBSyxJQUN0Q0QsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDSSxNQUFNLElBQ2hCSixDQUFDLEdBQUcsSUFBSSxDQUFDRSxJQUFJLENBQUNHLFlBQVksR0FBRyxJQUFJLENBQUNELE1BQU07RUFDL0M7RUFFQU4sTUFBTUEsQ0FBQSxFQUFHO0lBQ1AsTUFBTVEsV0FBVyxHQUFHLElBQUksQ0FBQ0osSUFBSSxDQUFDSyxnQkFBZ0IsQ0FBQ0QsV0FBVztJQUMxREEsV0FBVyxDQUFDQSxXQUFXLENBQUNFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUk7RUFDL0M7QUFDRjtBQUVBLCtEQUFlekIsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL3Byb2plY3RpbGUuanM/ZmY1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW92aW5nT2JqZWN0IGZyb20gXCIuL21vdmluZ19vYmplY3RcIjtcblxuY2xhc3MgUHJvamVjdGlsZSBleHRlbmRzIE1vdmluZ09iamVjdCB7XG4gIGNvbnN0cnVjdG9yKGFyZ3MpIHtcbiAgICBzdXBlcihhcmdzLm9iakFyZ3MpO1xuICAgIHRoaXMub3JpZ2luID0gYXJncy5vcmlnaW47XG4gIH1cblxuICBtb3ZlKHRpbWVEZWx0YSkge1xuICAgIGNvbnN0IHZlbG9jaXR5U2NhbGUgPSB0aW1lRGVsdGEgLyBNb3ZpbmdPYmplY3QuTk9STUFMX0ZSQU1FX1RJTUVfREVMVEE7XG4gICAgY29uc3Qgb2Zmc2V0WCA9IHRoaXMudmVsb2NpdHlbMF0gKiB2ZWxvY2l0eVNjYWxlO1xuICAgIGNvbnN0IG9mZnNldFkgPSB0aGlzLnZlbG9jaXR5WzFdICogdmVsb2NpdHlTY2FsZTtcblxuICAgIGNvbnN0IG5ld1BvcyA9IHRoaXMucG9zaXRpb247XG4gICAgbmV3UG9zWzBdICs9IG9mZnNldFg7XG4gICAgbmV3UG9zWzFdICs9IG9mZnNldFk7XG5cbiAgICBpZiAoIXRoaXMuaW5Cb3VuZHMobmV3UG9zKSkge1xuICAgICAgdGhpcy5yZW1vdmUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wb3NpdGlvbiA9IG5ld1Bvc1xuICAgIH1cbiAgfVxuXG4gIGluQm91bmRzKHBvc2l0aW9uKSB7XG4gICAgY29uc3QgW3gsIHldID0gcG9zaXRpb247XG4gICAgcmV0dXJuICh4ID4gLXRoaXMud2lkdGggXG4gICAgICAmJiB4IDwgdGhpcy5nYW1lLmNhbnZhc1dpZHRoICsgdGhpcy53aWR0aFxuICAgICAgJiYgeSA+IC10aGlzLmhlaWdodCBcbiAgICAgICYmIHkgPCB0aGlzLmdhbWUuY2FudmFzSGVpZ2h0ICsgdGhpcy5oZWlnaHQpXG4gIH1cblxuICByZW1vdmUoKSB7XG4gICAgY29uc3QgcHJvamVjdGlsZXMgPSB0aGlzLmdhbWUuYWxsTW92aW5nT2JqZWN0cy5wcm9qZWN0aWxlcztcbiAgICBwcm9qZWN0aWxlc1twcm9qZWN0aWxlcy5pbmRleE9mKHRoaXMpXSA9IG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvamVjdGlsZTsiXSwibmFtZXMiOlsiTW92aW5nT2JqZWN0IiwiUHJvamVjdGlsZSIsImNvbnN0cnVjdG9yIiwiYXJncyIsIm9iakFyZ3MiLCJvcmlnaW4iLCJtb3ZlIiwidGltZURlbHRhIiwidmVsb2NpdHlTY2FsZSIsIk5PUk1BTF9GUkFNRV9USU1FX0RFTFRBIiwib2Zmc2V0WCIsInZlbG9jaXR5Iiwib2Zmc2V0WSIsIm5ld1BvcyIsInBvc2l0aW9uIiwiaW5Cb3VuZHMiLCJyZW1vdmUiLCJ4IiwieSIsIndpZHRoIiwiZ2FtZSIsImNhbnZhc1dpZHRoIiwiaGVpZ2h0IiwiY2FudmFzSGVpZ2h0IiwicHJvamVjdGlsZXMiLCJhbGxNb3ZpbmdPYmplY3RzIiwiaW5kZXhPZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/projectile.js\n");

/***/ }),

/***/ "./src/scripts/ship.js":
/*!*****************************!*\
  !*** ./src/scripts/ship.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projectile */ \"./src/scripts/projectile.js\");\n\n\nclass Ship extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(objArgs, projectileArgs) {\n    super(objArgs);\n    this.projectileArgs = projectileArgs;\n    this.cooldown = projectileArgs.cooldown;\n    this.shootOnCooldown = false;\n  }\n  shootProjectile() {\n    // if (!this.shootOnCooldown) {\n    const dx = this.projectileArgs.xAdjustment;\n    const dy = this.projectileArgs.yAdjustment;\n    this.projectileArgs.objArgs.position = [this.position[0] + this.width / (2 + dx), this.position[1] + dy];\n    const projectile = new _projectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.projectileArgs);\n    this.game.allMovingObjects.projectiles.push(projectile);\n    this.shootOnCooldown = true;\n    setTimeout(this.resetCooldown.bind(this), this.cooldown);\n    // }\n  }\n\n  resetCooldown() {\n    this.shootOnCooldown = false;\n  }\n  damageTaken(damage) {\n    this.health -= damage;\n    // when hp === 0 handled in subclasses\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ship);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9zaGlwLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUEyQztBQUNMO0FBRXRDLE1BQU1FLElBQUksU0FBU0Ysc0RBQVksQ0FBQztFQUM5QkcsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFQyxjQUFjLEVBQUU7SUFDbkMsS0FBSyxDQUFDRCxPQUFPLENBQUM7SUFDZCxJQUFJLENBQUNDLGNBQWMsR0FBR0EsY0FBYztJQUNwQyxJQUFJLENBQUNDLFFBQVEsR0FBR0QsY0FBYyxDQUFDQyxRQUFRO0lBQ3ZDLElBQUksQ0FBQ0MsZUFBZSxHQUFHLEtBQUs7RUFDOUI7RUFFQUMsZUFBZUEsQ0FBQSxFQUFHO0lBQ2hCO0lBQ0UsTUFBTUMsRUFBRSxHQUFHLElBQUksQ0FBQ0osY0FBYyxDQUFDSyxXQUFXO0lBQzFDLE1BQU1DLEVBQUUsR0FBRyxJQUFJLENBQUNOLGNBQWMsQ0FBQ08sV0FBVztJQUMxQyxJQUFJLENBQUNQLGNBQWMsQ0FBQ0QsT0FBTyxDQUFDUyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUNBLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNDLEtBQUssSUFBRSxDQUFDLEdBQUNMLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQ0ksUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHRixFQUFFLENBQUM7SUFDcEcsTUFBTUksVUFBVSxHQUFHLElBQUlkLG1EQUFVLENBQUMsSUFBSSxDQUFDSSxjQUFjLENBQUM7SUFDdEQsSUFBSSxDQUFDVyxJQUFJLENBQUNDLGdCQUFnQixDQUFDQyxXQUFXLENBQUNDLElBQUksQ0FBQ0osVUFBVSxDQUFDO0lBQ3ZELElBQUksQ0FBQ1IsZUFBZSxHQUFHLElBQUk7SUFDM0JhLFVBQVUsQ0FBQyxJQUFJLENBQUNDLGFBQWEsQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQ2hCLFFBQVEsQ0FBQztJQUMxRDtFQUNGOztFQUVBZSxhQUFhQSxDQUFBLEVBQUc7SUFDZCxJQUFJLENBQUNkLGVBQWUsR0FBRyxLQUFLO0VBQzlCO0VBRUFnQixXQUFXQSxDQUFDQyxNQUFNLEVBQUU7SUFDbEIsSUFBSSxDQUFDQyxNQUFNLElBQUlELE1BQU07SUFDckI7RUFDRjtBQUNGOztBQUVBLCtEQUFldEIsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL3NoaXAuanM/NTUwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW92aW5nT2JqZWN0IGZyb20gXCIuL21vdmluZ19vYmplY3RcIjtcbmltcG9ydCBQcm9qZWN0aWxlIGZyb20gXCIuL3Byb2plY3RpbGVcIjtcblxuY2xhc3MgU2hpcCBleHRlbmRzIE1vdmluZ09iamVjdCB7XG4gIGNvbnN0cnVjdG9yKG9iakFyZ3MsIHByb2plY3RpbGVBcmdzKSB7XG4gICAgc3VwZXIob2JqQXJncyk7XG4gICAgdGhpcy5wcm9qZWN0aWxlQXJncyA9IHByb2plY3RpbGVBcmdzO1xuICAgIHRoaXMuY29vbGRvd24gPSBwcm9qZWN0aWxlQXJncy5jb29sZG93bjtcbiAgICB0aGlzLnNob290T25Db29sZG93biA9IGZhbHNlO1xuICB9XG5cbiAgc2hvb3RQcm9qZWN0aWxlKCkge1xuICAgIC8vIGlmICghdGhpcy5zaG9vdE9uQ29vbGRvd24pIHtcbiAgICAgIGNvbnN0IGR4ID0gdGhpcy5wcm9qZWN0aWxlQXJncy54QWRqdXN0bWVudDtcbiAgICAgIGNvbnN0IGR5ID0gdGhpcy5wcm9qZWN0aWxlQXJncy55QWRqdXN0bWVudDtcbiAgICAgIHRoaXMucHJvamVjdGlsZUFyZ3Mub2JqQXJncy5wb3NpdGlvbiA9IFt0aGlzLnBvc2l0aW9uWzBdICsgdGhpcy53aWR0aC8oMitkeCksIHRoaXMucG9zaXRpb25bMV0gKyBkeV07XG4gICAgICBjb25zdCBwcm9qZWN0aWxlID0gbmV3IFByb2plY3RpbGUodGhpcy5wcm9qZWN0aWxlQXJncyk7XG4gICAgICB0aGlzLmdhbWUuYWxsTW92aW5nT2JqZWN0cy5wcm9qZWN0aWxlcy5wdXNoKHByb2plY3RpbGUpO1xuICAgICAgdGhpcy5zaG9vdE9uQ29vbGRvd24gPSB0cnVlO1xuICAgICAgc2V0VGltZW91dCh0aGlzLnJlc2V0Q29vbGRvd24uYmluZCh0aGlzKSwgdGhpcy5jb29sZG93bik7XG4gICAgLy8gfVxuICB9XG5cbiAgcmVzZXRDb29sZG93bigpIHtcbiAgICB0aGlzLnNob290T25Db29sZG93biA9IGZhbHNlO1xuICB9XG5cbiAgZGFtYWdlVGFrZW4oZGFtYWdlKSB7XG4gICAgdGhpcy5oZWFsdGggLT0gZGFtYWdlO1xuICAgIC8vIHdoZW4gaHAgPT09IDAgaGFuZGxlZCBpbiBzdWJjbGFzc2VzXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2hpcDsiXSwibmFtZXMiOlsiTW92aW5nT2JqZWN0IiwiUHJvamVjdGlsZSIsIlNoaXAiLCJjb25zdHJ1Y3RvciIsIm9iakFyZ3MiLCJwcm9qZWN0aWxlQXJncyIsImNvb2xkb3duIiwic2hvb3RPbkNvb2xkb3duIiwic2hvb3RQcm9qZWN0aWxlIiwiZHgiLCJ4QWRqdXN0bWVudCIsImR5IiwieUFkanVzdG1lbnQiLCJwb3NpdGlvbiIsIndpZHRoIiwicHJvamVjdGlsZSIsImdhbWUiLCJhbGxNb3ZpbmdPYmplY3RzIiwicHJvamVjdGlsZXMiLCJwdXNoIiwic2V0VGltZW91dCIsInJlc2V0Q29vbGRvd24iLCJiaW5kIiwiZGFtYWdlVGFrZW4iLCJkYW1hZ2UiLCJoZWFsdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/ship.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;